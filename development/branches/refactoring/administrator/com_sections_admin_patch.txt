Index: //Rocklobster/sites/br-eng1.5/administrator/language/en-GB/en-GB.com_sections.ini
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/language/en-GB/en-GB.com_sections.ini	(revision 9787)
+++ //Rocklobster/sites/br-eng1.5/administrator/language/en-GB/en-GB.com_sections.ini	(working copy)
@@ -10,7 +10,7 @@
 CHANGES TO SECTION SAVED=Changes to the Section have been saved.
 COPY SECTION=Copy Section
 COPY TO SECTION=Copy to Section
-DESCCATANDITEMSCOPIED=Section %s and all its Categories and Articles have been copied as %s
+DESCCATANDITEMSCOPIED=Section(s) %s and all their Categories and Articles have been copied
 DESCALLITEMSWITHINCAT=and all the Articles within the Category (also listed)
 DESCCANNOTBEREMOVED=Section(s): %s cannot be deleted as they contain Categories
 DESCNEWMENUITEM=This will create a new Menu Item in the Menu you select
Index: //Rocklobster/sites/br-eng1.5/administrator/language/en-GB/en-GB.ini
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/language/en-GB/en-GB.ini	(revision 9787)
+++ //Rocklobster/sites/br-eng1.5/administrator/language/en-GB/en-GB.ini	(working copy)
@@ -202,6 +202,7 @@
 CONTENT IMAGES=Content Images
 CONTINUE=Continue
 COPY=Copy
+COPY OF=Copy of %s
 COPYRIGHT=Copyright
 COULD NOT MAKE CONFIGURATION.PHP UNWRITABLE=Could not make configuration.php unwritable
 COULD NOT COPY SETUP FILE=Could not copy setup file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/toolbar.sections.html.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/toolbar.sections.html.php	(revision 9787)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/toolbar.sections.html.php	(working copy)
@@ -1,66 +0,0 @@
-<?php
-/**
-* @version		$Id$
-* @package		Joomla
-* @subpackage	Sections
-* @copyright	Copyright (C) 2005 - 2008 Open Source Matters. All rights reserved.
-* @license		GNU/GPL, see LICENSE.php
-* Joomla! is free software. This version may have been modified pursuant
-* to the GNU General Public License, and as distributed it includes or
-* is derivative of works licensed under the GNU General Public License or
-* other free or open source software licenses.
-* See COPYRIGHT.php for copyright notices and details.
-*/
-
-// no direct access
-defined( '_JEXEC' ) or die( 'Restricted access' );
-
-/**
-* @package		Joomla
-* @subpackage	Sections
-*/
-class TOOLBAR_sections {
-	/**
-	* Draws the menu for Editing an existing category
-	*/
-	function _EDIT( $edit) {
-		$cid = JRequest::getVar('cid', array(0), '', 'array');
-		JArrayHelper::toInteger($cid, array(0));
-
-		$text = ( $edit ? JText::_( 'Edit' ) : JText::_( 'New' ) );
-
-		JToolBarHelper::title( JText::_( 'Section' ).': <small><small>[ '. $text.' ]</small></small>', 'sections.png' );
-		JToolBarHelper::save();
-		JToolBarHelper::apply();
-		if ( $edit ) {
-			// for existing items the button is renamed `close`
-			JToolBarHelper::cancel( 'cancel', 'Close' );
-		} else {
-			JToolBarHelper::cancel();
-		}
-		JToolBarHelper::help( 'screen.sections.edit' );
-	}
-	/**
-	* Draws the menu for Copying existing sections
-	* @param int The published state (to display the inverse button)
-	*/
-	function _COPY() {
-		JToolBarHelper::title( JText::_( 'Section' ) .': <small><small>[ '. JText::_( 'Copy' ).' ]</small></small>', 'section.png' );
-		//JToolBarHelper::title( JText::_( 'Copy Section' ), 'sections.png' );
-		JToolBarHelper::save( 'copysave' );
-		JToolBarHelper::cancel();
-	}
-	/**
-	* Draws the menu for Editing an existing category
-	*/
-	function _DEFAULT(){
-		JToolBarHelper::title( JText::_( 'Section Manager' ), 'sections.png' );
-		JToolBarHelper::publishList();
-		JToolBarHelper::unpublishList();
-		JToolBarHelper::customX( 'copyselect', 'copy.png', 'copy_f2.png', 'Copy', true );
-		JToolBarHelper::deleteList();
-		JToolBarHelper::editListX();
-		JToolBarHelper::addNewX();
-		JToolBarHelper::help( 'screen.sections' );
-	}
-}
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/models/section.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/models/section.php	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/models/section.php	(revision 0)
@@ -0,0 +1,396 @@
+<?php
+/**
+ * @version		$Id: $
+ * @package		Joomla
+ * @subpackage	Sections
+ * @copyright	Copyright (C) 2005 - 2008 Open Source Matters. All rights reserved.
+ * @license		GNU/GPL, see LICENSE.php
+ * Joomla! is free software. This version may have been modified pursuant to the
+ * GNU General Public License, and as distributed it includes or is derivative
+ * of works licensed under the GNU General Public License or other free or open
+ * source software licenses. See COPYRIGHT.php for copyright notices and
+ * details.
+ */
+
+// Check to ensure this file is included in Joomla!
+defined('_JEXEC') or die();
+
+jimport('joomla.application.component.model');
+
+/**
+ * Sections Component Section Model
+ *
+ * @package		Joomla
+ * @subpackage	Sections
+ * @since 1.5
+ */
+class SectionsModelSection extends JModel
+{
+	/**
+	 * Section id
+	 *
+	 * @var int
+	 */
+	var $_id = null;
+
+	/**
+	 * Section data
+	 *
+	 * @var array
+	 */
+	var $_data = null;
+
+	/**
+	 * Constructor
+	 *
+	 * @since 1.5
+	 */
+	function __construct()
+	{
+		parent::__construct();
+
+		$array = JRequest::getVar('cid', array(0), '', 'array');
+		$edit	= JRequest::getVar('edit',true);
+		if($edit)
+			$this->setId((int)$array[0]);
+	}
+
+	/**
+	 * Method to set the section identifier
+	 *
+	 * @access	public
+	 * @param	int Section identifier
+	 */
+	function setId($id)
+	{
+		// Set section id and wipe data
+		$this->_id		= $id;
+		$this->_data	= null;
+	}
+
+	/**
+	 * Method to get a section
+	 *
+	 * @since 1.5
+	 */
+	function &getData()
+	{
+		// Load the section data
+		if (!$this->_loadData())
+			$this->_initData();
+
+		return $this->_data;
+	}
+
+	/**
+	 * Tests if section is checked out
+	 *
+	 * @access	public
+	 * @param	int	A user id
+	 * @return	boolean	True if checked out
+	 * @since	1.5
+	 */
+	function isCheckedOut( $uid=0 )
+	{
+		if ($this->_loadData())
+		{
+			if ($uid) {
+				return ($this->_data->checked_out && $this->_data->checked_out != $uid);
+			} else {
+				return $this->_data->checked_out;
+			}
+		}
+	}
+
+	/**
+	 * Method to checkin/unlock the section
+	 *
+	 * @access	public
+	 * @return	boolean	True on success
+	 * @since	1.5
+	 */
+	function checkin()
+	{
+		if ($this->_id)
+		{
+			$section = & $this->getTable();
+			if(! $section->checkin($this->_id)) {
+				$this->setError($this->_db->getErrorMsg());
+				return false;
+			}
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	 * Method to checkout/lock the section
+	 *
+	 * @access	public
+	 * @param	int	$uid	User ID of the user checking the section out
+	 * @return	boolean	True on success
+	 * @since	1.5
+	 */
+	function checkout($uid = null)
+	{
+		if ($this->_id)
+		{
+			// Make sure we have a user id to checkout the section with
+			if (is_null($uid)) {
+				$user	=& JFactory::getUser();
+				$uid	= $user->get('id');
+			}
+			// Lets get to it and checkout the thing...
+			$section = & $this->getTable();
+			if(!$section->checkout($uid, $this->_id)) {
+				$this->setError($this->_db->getErrorMsg());
+				return false;
+			}
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	 * Method to store the section
+	 *
+	 * @access	public
+	 * @return	boolean	True on success
+	 * @since	1.5
+	 */
+	function store($data)
+	{
+		$row =& $this->getTable();
+
+		// Bind the form fields to the web link table
+		if (!$row->bind($data)) {
+			$this->setError($this->_db->getErrorMsg());
+			return false;
+		}
+
+		// if new item, order last in appropriate group
+		if (!$row->id) {
+			$where = 'catid = ' . (int) $row->catid ;
+			$row->ordering = $row->getNextOrder( $where );
+		}
+
+		// Make sure the web link table is valid
+		if (!$row->check()) {
+			$this->setError($this->_db->getErrorMsg());
+			return false;
+		}
+
+		// Store the web link table to the database
+		if (!$row->store()) {
+			$this->setError($this->_db->getErrorMsg());
+			return false;
+		}
+
+		return true;
+	}
+
+	/**
+	 * Method to remove a section
+	 *
+	 * @access	public
+	 * @return	boolean	True on success
+	 * @since	1.5
+	 */
+	function delete($cid = array())
+	{
+		$result = false;
+
+		if (count( $cid ))
+		{
+			JArrayHelper::toInteger($cid);
+			$cids = implode( ',', $cid );
+			$query = 'DELETE FROM #__sections'
+				. ' WHERE id IN ( '.$cids.' )';
+			$this->_db->setQuery( $query );
+			if(!$this->_db->query()) {
+				$this->setError($this->_db->getErrorMsg());
+				return false;
+			}
+		}
+
+		return true;
+	}
+
+	/**
+	 * Method to (un)publish a section
+	 *
+	 * @access	public
+	 * @return	boolean	True on success
+	 * @since	1.5
+	 */
+	function publish($cid = array(), $publish = 1)
+	{
+		$user 	=& JFactory::getUser();
+
+		if (count( $cid ))
+		{
+			JArrayHelper::toInteger($cid);
+			$cids = implode( ',', $cid );
+
+			$query = 'UPDATE #__sections'
+				. ' SET published = '.(int) $publish
+				. ' WHERE id IN ( '.$cids.' )'
+				. ' AND ( checked_out = 0 OR ( checked_out = '.(int) $user->get('id').' ) )'
+			;
+			$this->_db->setQuery( $query );
+			if (!$this->_db->query()) {
+				$this->setError($this->_db->getErrorMsg());
+				return false;
+			}
+		}
+
+		return true;
+	}
+
+	/**
+	 * Method to move a section
+	 *
+	 * @access	public
+	 * @return	boolean	True on success
+	 * @since	1.5
+	 */
+	function move($direction)
+	{
+		$row =& $this->getTable();
+		if (!$row->load($this->_id)) {
+			$this->setError($this->_db->getErrorMsg());
+			return false;
+		}
+
+		if (!$row->move( $direction, ' published >= 0 ' )) {
+			$this->setError($this->_db->getErrorMsg());
+			return false;
+		}
+
+		return true;
+	}
+
+	/**
+	 * Method to move a section
+	 *
+	 * @access	public
+	 * @return	boolean	True on success
+	 * @since	1.5
+	 */
+	function saveorder($cid = array(), $order)
+	{
+		$row =& $this->getTable();
+		$groupings = array();
+
+		// update ordering values
+		for( $i=0; $i < count($cid); $i++ )
+		{
+			$row->load( (int) $cid[$i] );
+
+			if ($row->ordering != $order[$i])
+			{
+				$row->ordering = $order[$i];
+				if (!$row->store()) {
+					$this->setError($this->_db->getErrorMsg());
+					return false;
+				}
+			}
+		}
+
+		// execute updateOrder
+		$row->reorder(' 1 ');
+
+		return true;
+	}
+
+	/**
+	 * Method to load section data
+	 *
+	 * @access	private
+	 * @return	boolean	True on success
+	 * @since	1.5
+	 */
+	function _loadData()
+	{
+		// Lets load the content if it doesn't already exist
+		if (empty($this->_data))
+		{
+			$query = 'SELECT s.* '.
+					' FROM #__sections AS s' .
+					' WHERE s.id = '.(int) $this->_id;
+			$this->_db->setQuery($query);
+			$this->_data = $this->_db->loadObject();
+			return (boolean) $this->_data;
+		}
+		return true;
+	}
+
+	/**
+	 * Method to initialise the section data
+	 *
+	 * @access	private
+	 * @return	boolean	True on success
+	 * @since	1.5
+	 */
+	function _initData()
+	{
+		// Lets load the content if it doesn't already exist
+		if (empty($this->_data))
+		{
+			$section = new stdClass();
+			$section->id				= 0;
+			$section->name				= null;
+			$section->alias             = null;
+			$section->title				= null;
+			$section->image				= null;
+			$section->image_position	= null;
+			$section->scope				= null;
+			$section->description		= null;
+			$section->count				= 0;
+			$section->params			= null;
+			$section->published			= 0;
+			$section->checked_out		= 0;
+			$section->checked_out_time	= 0;
+			$section->ordering			= 0;
+			$section->archived			= 0;
+			$section->approved			= 0;
+			$section->categories		= 0;
+			$section->active			= 0;
+			$section->trash				= 0;
+			$this->_data					= $section;
+			return (boolean) $this->_data;
+		}
+		return true;
+	}
+
+	/**
+	 * Method to set the section access
+	 *
+	 * @access	public
+	 * @return	boolean	True on success
+	 * @since	1.5
+	 */
+	function setAccess($cid = array(), $access = 0)
+	{
+		if (count( $cid ))
+		{
+			$user 	=& JFactory::getUser();
+
+			JArrayHelper::toInteger($cid);
+			$cids = implode( ',', $cid );
+
+			$query = 'UPDATE #__sections'
+				. ' SET access = '.(int) $access
+				. ' WHERE id IN ( '.$cids.' )'
+				. ' AND ( checked_out = 0 OR ( checked_out = '.(int) $user->get('id').' ) )'
+			;
+			$this->_db->setQuery( $query );
+			if (!$this->_db->query()) {
+				$this->setError($this->_db->getErrorMsg());
+				return false;
+			}
+		}
+
+		return true;
+	}
+}
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/models/index.html
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/models/index.html	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/models/index.html	(revision 0)
@@ -0,0 +1 @@
+<html><body bgcolor="#FFFFFF"></body></html>
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/models/sections.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/models/sections.php	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/models/sections.php	(revision 0)
@@ -0,0 +1,229 @@
+<?php
+/**
+ * @version		$Id: $
+ * @package		Joomla
+ * @subpackage	Sections
+ * @copyright	Copyright (C) 2005 - 2008 Open Source Matters. All rights reserved.
+ * @license		GNU/GPL, see LICENSE.php
+ * Joomla! is free software. This version may have been modified pursuant to the
+ * GNU General Public License, and as distributed it includes or is derivative
+ * of works licensed under the GNU General Public License or other free or open
+ * source software licenses. See COPYRIGHT.php for copyright notices and
+ * details.
+ */
+
+// Check to ensure this file is included in Joomla!
+defined('_JEXEC') or die();
+
+jimport('joomla.application.component.model');
+
+/**
+ * Sections Component Sections Model
+ *
+ * @package		Joomla
+ * @subpackage	Sections
+ * @since 1.5
+ */
+class SectionsModelSections extends JModel
+{
+	/**
+	 * Category ata array
+	 *
+	 * @var array
+	 */
+	var $_data = null;
+
+	/**
+	 * Category total
+	 *
+	 * @var integer
+	 */
+	var $_total = null;
+
+	/**
+	 * Pagination object
+	 *
+	 * @var object
+	 */
+	var $_pagination = null;
+
+	/**
+	 * Constructor
+	 *
+	 * @since 1.5
+	 */
+	function __construct()
+	{
+		parent::__construct();
+
+		global $mainframe, $option;
+
+		// Get the pagination request variables
+		$limit		= $mainframe->getUserStateFromRequest( 'global.list.limit', 'limit', $mainframe->getCfg('list_limit'), 'int' );
+		$limitstart	= $mainframe->getUserStateFromRequest( $option.'.limitstart', 'limitstart', 0, 'int' );
+
+		$this->setState('limit', $limit);
+		$this->setState('limitstart', $limitstart);
+	}
+
+	/**
+	 * Method to get Sections item data
+	 *
+	 * @access public
+	 * @return array
+	 */
+	function getData()
+	{
+		// Lets load the content if it doesn't already exist
+		if (empty($this->_data))
+		{
+			$query = $this->_buildQuery();
+			$this->_data = $this->_getList($query, $this->getState('limitstart'), $this->getState('limit'));
+			$this->getSectionTotals();
+		}
+
+		return $this->_data;
+	}
+
+	/**
+	 * Method to get the total number of section items
+	 *
+	 * @access public
+	 * @return integer
+	 */
+	function getTotal()
+	{
+		// Lets load the content if it doesn't already exist
+		if (empty($this->_total))
+		{
+			$query = $this->_buildQuery();
+			$this->_total = $this->_getListCount($query);
+		}
+
+		return $this->_total;
+	}
+
+	/**
+	 * Method to get the section totals
+	 *
+	 * @access public
+	 */
+	function getSectionTotals()
+	{
+		$db =& JFactory::getDBO();
+
+		$count = count( $this->_data );
+		// number of Active Categories
+		for ( $i = 0; $i < $count; $i++ ) {
+			$query = 'SELECT COUNT( a.id )'
+			. ' FROM #__categories AS a'
+			. ' WHERE a.section = '.$db->Quote($this->_data[$i]->id)
+			. ' AND a.published <> -2'
+			;
+			$db->setQuery( $query );
+			$active = $db->loadResult();
+			$this->_data[$i]->categories = $active;
+		}
+		// number of Active Items
+		for ( $i = 0; $i < $count; $i++ ) {
+			$query = 'SELECT COUNT( a.id )'
+			. ' FROM #__content AS a'
+			. ' WHERE a.sectionid = '.(int) $this->_data[$i]->id
+			. ' AND a.state <> -2'
+			;
+			$db->setQuery( $query );
+			$active = $db->loadResult();
+			$this->_data[$i]->active = $active;
+		}
+		// number of Trashed Items
+		for ( $i = 0; $i < $count; $i++ ) {
+			$query = 'SELECT COUNT( a.id )'
+			. ' FROM #__content AS a'
+			. ' WHERE a.sectionid = '.(int) $this->_data[$i]->id
+			. ' AND a.state = -2'
+			;
+			$db->setQuery( $query );
+			$trash = $db->loadResult();
+			$this->_data[$i]->trash = $trash;
+		}
+	}
+
+	/**
+	 * Method to get a pagination object for the Sections
+	 *
+	 * @access public
+	 * @return integer
+	 */
+	function getPagination()
+	{
+		// Lets load the content if it doesn't already exist
+		if (empty($this->_pagination))
+		{
+			jimport('joomla.html.pagination');
+			$this->_pagination = new JPagination( $this->getTotal(), $this->getState('limitstart'), $this->getState('limit') );
+		}
+
+		return $this->_pagination;
+	}
+
+	function _buildQuery()
+	{
+		// Get the WHERE and ORDER BY clauses for the query
+		$where		= $this->_buildContentWhere();
+		$orderby	= $this->_buildContentOrderBy();
+
+		$query = ' SELECT s.*, u.name AS editor, g.name AS groupname '
+			. ' FROM #__sections AS s '
+			. ' LEFT JOIN #__users AS u ON u.id = s.checked_out '
+			. ' LEFT JOIN #__groups AS g ON g.id = s.access'
+			. $where
+			. $orderby
+		;
+
+		return $query;
+	}
+
+	function _buildContentOrderBy()
+	{
+		global $mainframe, $option;
+
+		$filter_order		= $mainframe->getUserStateFromRequest( $option.'filter_order',		'filter_order',		's.ordering',	'cmd' );
+		$filter_order_Dir	= $mainframe->getUserStateFromRequest( $option.'filter_order_Dir',	'filter_order_Dir',	'',				'word' );
+
+		if ($filter_order == 's.ordering'){
+			$orderby 	= ' ORDER BY s.ordering '.$filter_order_Dir;
+		} else {
+			$orderby 	= ' ORDER BY '.$filter_order.' '.$filter_order_Dir.' , s.ordering ';
+		}
+
+		return $orderby;
+	}
+
+	function _buildContentWhere()
+	{
+		global $mainframe, $option;
+
+		$filter_state		= $mainframe->getUserStateFromRequest( $option.'filter_state',		'filter_state',		'',				'word' );
+		$filter_order		= $mainframe->getUserStateFromRequest( $option.'filter_order',		'filter_order',		's.ordering',	'cmd' );
+		$filter_order_Dir	= $mainframe->getUserStateFromRequest( $option.'filter_order_Dir',	'filter_order_Dir',	'',				'word' );
+		$search				= $mainframe->getUserStateFromRequest( $option.'search',			'search',			'',				'string' );
+		$search				= JString::strtolower( $search );
+
+		$where = array();
+
+		if ($search) {
+			$where[] = 'LOWER(s.name) LIKE '.$this->_db->Quote('%'.$search.'%');
+		}
+		if ( $filter_state ) {
+			if ( $filter_state == 'P' ) {
+				$where[] = 's.published = 1';
+			} else if ($filter_state == 'U' ) {
+				$where[] = 's.published = 0';
+			}
+		}
+
+		$where 		= ( count( $where ) ? ' WHERE '. implode( ' AND ', $where ) : '' );
+
+		return $where;
+	}
+}
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/admin.sections.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/admin.sections.php	(revision 9787)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/admin.sections.php	(working copy)
@@ -1,733 +0,0 @@
-<?php
-/**
-* @version		$Id$
-* @package		Joomla
-* @subpackage	Sections
-* @copyright	Copyright (C) 2005 - 2008 Open Source Matters. All rights reserved.
-* @license		GNU/GPL, see LICENSE.php
-* Joomla! is free software. This version may have been modified pursuant
-* to the GNU General Public License, and as distributed it includes or
-* is derivative of works licensed under the GNU General Public License or
-* other free or open source software licenses.
-* See COPYRIGHT.php for copyright notices and details.
-*/
-
-// no direct access
-defined( '_JEXEC' ) or die( 'Restricted access' );
-
-require_once( JApplicationHelper::getPath( 'admin_html' ) );
-
-// get parameters from the URL or submitted form
-$scope 		= JRequest::getCmd( 'scope' );
-$cid 		= JRequest::getVar( 'cid', array(0), '', 'array' );
-JArrayHelper::toInteger($cid, array(0));
-
-$task = JRequest::getCmd('task');
-
-switch ($task)
-{
-	case 'add' :
-		editSection(false );
-		break;
-
-	case 'edit':
-		editSection(true );
-		break;
-
-	case 'go2menu':
-	case 'go2menuitem':
-	case 'save':
-	case 'apply':
-		saveSection( $option, $scope, $task );
-		break;
-
-	case 'remove':
-		removeSections( $cid, $scope, $option );
-		break;
-
-	case 'copyselect':
-		copySectionSelect( $option, $cid, $scope );
-		break;
-
-	case 'copysave':
-		copySectionSave( $cid, $scope );
-		break;
-
-	case 'publish':
-		publishSections( $scope, $cid, 1, $option );
-		break;
-
-	case 'unpublish':
-		publishSections( $scope, $cid, 0, $option );
-		break;
-
-	case 'cancel':
-		cancelSection( $option, $scope );
-		break;
-
-	case 'orderup':
-		orderSection( $cid[0], -1, $option, $scope );
-		break;
-
-	case 'orderdown':
-		orderSection( $cid[0], 1, $option, $scope );
-		break;
-
-	case 'accesspublic':
-		accessMenu( $cid[0], 0, $option );
-		break;
-
-	case 'accessregistered':
-		accessMenu( $cid[0], 1, $option );
-		break;
-
-	case 'accessspecial':
-		accessMenu( $cid[0], 2, $option );
-		break;
-
-	case 'saveorder':
-		saveOrder( $cid );
-		break;
-
-	default:
-		showSections( $scope, $option );
-		break;
-}
-
-/**
-* Compiles a list of categories for a section
-* @param database A database connector object
-* @param string The name of the category section
-* @param string The name of the current user
-*/
-function showSections( $scope, $option )
-{
-	global $mainframe;
-
-	$db					=& JFactory::getDBO();
-	$user				=& JFactory::getUser();
-	$filter_order		= $mainframe->getUserStateFromRequest( $option.'.filter_order',		'filter_order',		's.ordering',	'cmd' );
-	$filter_order_Dir	= $mainframe->getUserStateFromRequest( $option.'.filter_order_Dir',	'filter_order_Dir',	'',				'word' );
-	$filter_state		= $mainframe->getUserStateFromRequest( $option.'.filter_state',		'filter_state',		'',				'word' );
-	$search				= $mainframe->getUserStateFromRequest( $option.'.search',			'search',			'',				'string' );
-	$search				= JString::strtolower( $search );
-
-	$limit		= $mainframe->getUserStateFromRequest( 'global.list.limit', 'limit', $mainframe->getCfg('list_limit'), 'int' );
-	$limitstart	= $mainframe->getUserStateFromRequest( $option.'.limitstart', 'limitstart', 0, 'int' );
-
-	$where[] = 's.scope = '.$db->Quote($scope);
-
-	if ( $filter_state ) {
-		if ( $filter_state == 'P' ) {
-			$where[] = 's.published = 1';
-		} else if ($filter_state == 'U' ) {
-			$where[] = 's.published = 0';
-		}
-	}
-	if ($search) {
-		$where[] = 'LOWER(s.title) LIKE '.$db->Quote('%'.$search.'%');
-	}
-
-	$where 		= ( count( $where ) ? ' WHERE ' . implode( ' AND ', $where ) : '' );
-	$orderby 	= ' ORDER BY '.$filter_order.' '. $filter_order_Dir .', s.ordering';
-
-	// get the total number of records
-	$query = 'SELECT COUNT(*)'
-	. ' FROM #__sections AS s'
-	. $where
-	;
-	$db->setQuery( $query );
-	$total = $db->loadResult();
-
-	jimport('joomla.html.pagination');
-	$pageNav = new JPagination( $total, $limitstart, $limit );
-
-	$query = 'SELECT s.*, g.name AS groupname, u.name AS editor'
-	. ' FROM #__sections AS s'
-	. ' LEFT JOIN #__content AS cc ON s.id = cc.sectionid'
-	. ' LEFT JOIN #__users AS u ON u.id = s.checked_out'
-	. ' LEFT JOIN #__groups AS g ON g.id = s.access'
-	. $where
-	. ' GROUP BY s.id'
-	. $orderby
-	;
-	$db->setQuery( $query, $pageNav->limitstart, $pageNav->limit );
-	$rows = $db->loadObjectList();
-	if ($db->getErrorNum()) {
-		echo $db->stderr();
-		return false;
-	}
-
-	$count = count( $rows );
-	// number of Active Categories
-	for ( $i = 0; $i < $count; $i++ ) {
-		$query = 'SELECT COUNT( a.id )'
-		. ' FROM #__categories AS a'
-		. ' WHERE a.section = '.$db->Quote($rows[$i]->id)
-		. ' AND a.published <> -2'
-		;
-		$db->setQuery( $query );
-		$active = $db->loadResult();
-		$rows[$i]->categories = $active;
-	}
-	// number of Active Items
-	for ( $i = 0; $i < $count; $i++ ) {
-		$query = 'SELECT COUNT( a.id )'
-		. ' FROM #__content AS a'
-		. ' WHERE a.sectionid = '.(int) $rows[$i]->id
-		. ' AND a.state <> -2'
-		;
-		$db->setQuery( $query );
-		$active = $db->loadResult();
-		$rows[$i]->active = $active;
-	}
-	// number of Trashed Items
-	for ( $i = 0; $i < $count; $i++ ) {
-		$query = 'SELECT COUNT( a.id )'
-		. ' FROM #__content AS a'
-		. ' WHERE a.sectionid = '.(int) $rows[$i]->id
-		. ' AND a.state = -2'
-		;
-		$db->setQuery( $query );
-		$trash = $db->loadResult();
-		$rows[$i]->trash = $trash;
-	}
-
-	// state filter
-	$lists['state']	= JHTML::_('grid.state',  $filter_state );
-
-	// table ordering
-	$lists['order_Dir']	= $filter_order_Dir;
-	$lists['order']		= $filter_order;
-
-	// search filter
-	$lists['search']= $search;
-
-	sections_html::show( $rows, $scope, $user->get('id'), $pageNav, $option, $lists );
-}
-
-/**
-* Compiles information to add or edit a section
-* @param database A database connector object
-* @param string The name of the category section
-* @param integer The unique id of the category to edit (0 if new)
-* @param string The name of the current user
-*/
-function editSection( $edit)
-{
-	global $mainframe;
-
-	$db			=& JFactory::getDBO();
-	$user 		=& JFactory::getUser();
-
-	$option		= JRequest::getCmd( 'option');
-	$scope		= JRequest::getCmd( 'scope' );
-	$cid		= JRequest::getVar( 'cid', array(0), '', 'array' );
-	JArrayHelper::toInteger($cid, array(0));
-
-	$row =& JTable::getInstance('section');
-	// load the row from the db table
-	if ($edit)
-		$row->load( $cid[0] );
-
-	// fail if checked out not by 'me'
-	if ($row->isCheckedOut( $user->get('id') )) {
-		$msg = JText::sprintf( 'DESCBEINGEDITTED', JText::_( 'The section' ), $row->title );
-		$mainframe->redirect( 'index.php?option='. $option .'&scope='. $row->scope, $msg );
-	}
-
-	if ( $edit ) {
-		$row->checkout( $user->get('id') );
-	} else {
-		$row->scope 		= $scope;
-		$row->published 	= 1;
-	}
-
-	// build the html select list for ordering
-	$query = 'SELECT ordering AS value, title AS text'
-	. ' FROM #__sections'
-	. ' WHERE scope='.$db->Quote($row->scope).' ORDER BY ordering'
-	;
-	if($edit)
-		$lists['ordering'] 			= JHTML::_('list.specificordering',  $row, $cid[0], $query );
-	else
-		$lists['ordering'] 			= JHTML::_('list.specificordering',  $row, '', $query );
-	// build the select list for the image positions
-	$active =  ( $row->image_position ? $row->image_position : 'left' );
-	$lists['image_position'] 	= JHTML::_('list.positions',  'image_position', $active, NULL, 0 );
-	// build the html select list for images
-	$lists['image'] 			= JHTML::_('list.images',  'image', $row->image );
-	// build the html select list for the group access
-	$lists['access'] 			= JHTML::_('list.accesslevel',  $row );
-	// build the html radio buttons for published
-	$lists['published'] 		= JHTML::_('select.booleanlist',  'published', 'class="inputbox"', $row->published );
-
-	sections_html::edit( $row, $option, $lists );
-}
-
-/**
-* Saves the catefory after an edit form submit
-* @param database A database connector object
-* @param string The name of the category section
-*/
-function saveSection( $option, $scope, $task )
-{
-	global $mainframe;
-
-	// Check for request forgeries.
-	$token = JUtility::getToken();
-	if (!JRequest::getInt($token, 0, 'post')) {
-		JError::raiseError(403, 'Request Forbidden');
-	}
-
-	$db			=& JFactory::getDBO();
-	$menu		= JRequest::getVar( 'menu', 'mainmenu', 'post', 'string' );
-	$menuid		= JRequest::getVar( 'menuid', 0, 'post', 'int' );
-	$oldtitle	= JRequest::getVar( 'oldtitle', '', '', 'post', 'string' );
-
-	$post = JRequest::get('post');
-
-	// fix up special html fields
-	$post['description'] = JRequest::getVar( 'description', '', 'post', 'string', JREQUEST_ALLOWRAW );
-
-	$row =& JTable::getInstance('section');
-	if (!$row->bind($post)) {
-		JError::raiseError(500, $row->getError() );
-	}
-	if (!$row->check()) {
-		JError::raiseError(500, $row->getError() );
-	}
-	if ( $oldtitle ) {
-		if ( $oldtitle <> $row->title ) {
-			$query = 'UPDATE #__menu'
-			. ' SET name = '.$db->Quote($row->title)
-			. ' WHERE name = '.$db->Quote($oldtitle)
-			. ' AND type = "content_section"'
-			;
-			$db->setQuery( $query );
-			$db->query();
-		}
-	}
-
-	// if new item order last in appropriate group
-	if (!$row->id) {
-		$row->ordering = $row->getNextOrder();
-	}
-
-	if (!$row->store()) {
-		JError::raiseError(500, $row->getError() );
-	}
-	$row->checkin();
-
-	switch ( $task )
-	{
-		case 'go2menu':
-			$mainframe->redirect( 'index.php?option=com_menus&menutype='. $menu );
-			break;
-
-		case 'go2menuitem':
-			$mainframe->redirect( 'index.php?option=com_menus&menutype='. $menu .'&task=edit&id='. $menuid );
-			break;
-
-		case 'apply':
-			$msg = JText::_( 'Changes to Section saved' );
-			$mainframe->redirect( 'index.php?option='. $option .'&scope='. $scope .'&task=edit&cid[]='. $row->id, $msg );
-			break;
-
-		case 'save':
-		default:
-			$msg = JText::_( 'Section saved' );
-			$mainframe->redirect( 'index.php?option='. $option .'&scope='. $scope, $msg );
-			break;
-	}
-}
-/**
-* Deletes one or more categories from the categories table
-* @param database A database connector object
-* @param string The name of the category section
-* @param array An array of unique category id numbers
-*/
-function removeSections( $cid, $scope, $option )
-{
-	global $mainframe;
-
-	// Check for request forgeries.
-	$token = JUtility::getToken();
-	if (!JRequest::getInt($token, 0, 'post')) {
-		JError::raiseError(403, 'Request Forbidden');
-	}
-
-	$db =& JFactory::getDBO();
-	if (count( $cid ) < 1) {
-		JError::raiseError(500, JText::_( 'Select a section to delete', true ) );
-	}
-
-	JArrayHelper::toInteger( $cid );
-	$cids = implode( ',', $cid );
-
-	$query = 'SELECT s.id, s.name, COUNT(c.id) AS numcat'
-	. ' FROM #__sections AS s'
-	. ' LEFT JOIN #__categories AS c ON c.section=s.id'
-	. ' WHERE s.id IN ( '.$cids.' )'
-	. ' GROUP BY s.id'
-	;
-	$db->setQuery( $query );
-	if (!($rows = $db->loadObjectList())) {
-		echo "<script> alert('".$db->getErrorMsg(true)."'); window.history.go(-1); </script>\n";
-	}
-
-	$err = array();
-	$cid = array();
-	foreach ($rows as $row) {
-		if ($row->numcat == 0) {
-			$cid[]	= (int) $row->id;
-			$name[]	= $row->name;
-		} else {
-			$err[]	= $row->name;
-		}
-	}
-
-	if (count( $cid ))
-	{
-		$cids = implode( ',', $cid );
-		$query = 'DELETE FROM #__sections'
-		. ' WHERE id IN ( '.$cids.' )'
-		;
-		$db->setQuery( $query );
-		if (!$db->query()) {
-			echo "<script> alert('".$db->getErrorMsg(true)."'); window.history.go(-1); </script>\n";
-		}
-	}
-
-	if (count( $err ))
-	{
-		$cids = implode( ', ', $err );
-		$msg = JText::sprintf( 'DESCCANNOTBEREMOVED', $cids );
-		$mainframe->redirect( 'index.php?option='. $option .'&scope='. $scope, $msg );
-	}
-
-	$names = implode( ', ', $name );
-	$msg = JText::sprintf( 'Sections successfully deleted', $names );
-	$mainframe->redirect( 'index.php?option='. $option .'&scope='. $scope, $msg );
-}
-
-/**
-* Publishes or Unpublishes one or more categories
-* @param database A database connector object
-* @param string The name of the category section
-* @param integer A unique category id (passed from an edit form)
-* @param array An array of unique category id numbers
-* @param integer 0 if unpublishing, 1 if publishing
-* @param string The name of the current user
-*/
-function publishSections( $scope, $cid=null, $publish=1, $option )
-{
-	global $mainframe;
-
-	// Check for request forgeries.
-	$token = JUtility::getToken();
-	if (!JRequest::getInt($token, 0, 'post')) {
-		JError::raiseError(403, 'Request Forbidden');
-	}
-
-	$db 	=& JFactory::getDBO();
-	$user 	=& JFactory::getUser();
-
-	JArrayHelper::toInteger($cid);
-
-	if ( count( $cid ) < 1 ) {
-		$action = $publish ? 'publish' : 'unpublish';
-		JError::raiseError(500, JText::_( 'Select a section to '.$action, true ) );
-	}
-
-	$cids = implode( ',', $cid );
-	$count = count( $cid );
-	$query = 'UPDATE #__sections'
-	. ' SET published = '.(int) $publish
-	. ' WHERE id IN ( '.$cids.' )'
-	. ' AND ( checked_out = 0 OR ( checked_out = '.(int) $user->get('id').' ) )'
-	;
-	$db->setQuery( $query );
-	if (!$db->query()) {
-		JError::raiseError(500, $db->getErrorMsg() );
-	}
-
-	if ( $count == 1 ) {
-		$row =& JTable::getInstance('section');
-		$row->checkin( $cid[0] );
-	}
-
-	// check if section linked to menu items if unpublishing
-	if ( $publish == 0 ) {
-		$query = 'SELECT id'
-		. ' FROM #__menu'
-		. ' WHERE type = "content_section"'
-		. ' AND componentid IN ( '.$cids.' )'
-		;
-		$db->setQuery( $query );
-		$menus = $db->loadObjectList();
-
-		if ($menus) {
-			foreach ($menus as $menu) {
-				$query = 'UPDATE #__menu'
-				. ' SET published = '.(int) $publish
-				. ' WHERE id = '.(int) $menu->id
-				;
-				$db->setQuery( $query );
-				$db->query();
-			}
-		}
-	}
-
-	$mainframe->redirect( 'index.php?option='. $option .'&scope='. $scope );
-}
-
-/**
-* Cancels an edit operation
-* @param database A database connector object
-* @param string The name of the category section
-* @param integer A unique category id
-*/
-function cancelSection( $option, $scope )
-{
-	global $mainframe;
-
-	$db =& JFactory::getDBO();
-	$row =& JTable::getInstance('section');
-	$row->bind(JRequest::get('post'));
-	$row->checkin();
-
-	$mainframe->redirect( 'index.php?option='. $option .'&scope='. $scope );
-}
-
-/**
-* Moves the order of a record
-* @param integer The increment to reorder by
-*/
-function orderSection( $uid, $inc, $option, $scope )
-{
-	global $mainframe;
-
-	// Check for request forgeries.
-	$token = JUtility::getToken();
-	if (!JRequest::getInt($token, 0, 'post')) {
-		JError::raiseError(403, 'Request Forbidden');
-	}
-
-	$db =& JFactory::getDBO();
-	$row =& JTable::getInstance('section');
-	$row->load( $uid );
-	$row->move( $inc, 'scope = '.$db->Quote($row->scope) );
-
-	$mainframe->redirect( 'index.php?option='. $option .'&scope='. $scope );
-}
-
-
-/**
-* Form for copying item(s) to a specific menu
-*/
-function copySectionSelect( $option, $cid, $section )
-{
-	global $mainframe;
-
-	// Check for request forgeries.
-	$token = JUtility::getToken();
-	if (!JRequest::getInt($token, 0, 'post')) {
-		JError::raiseError(403, 'Request Forbidden');
-	}
-
-	$db =& JFactory::getDBO();
-
-	JArrayHelper::toInteger($cid);
-
-	if ( count( $cid ) < 1) {
-		JError::raiseError(500, JText::_( 'Select an item to move', true ) );
-	}
-
-	## query to list selected categories
-	$cids = implode( ',', $cid );
-	$query = 'SELECT a.title, a.id'
-	. ' FROM #__categories AS a'
-	. ' WHERE a.section IN ( '.$cids.' )'
-	;
-	$db->setQuery( $query );
-	$categories = $db->loadObjectList();
-
-	## query to list items from categories
-	$query = 'SELECT a.title, a.id'
-	. ' FROM #__content AS a'
-	. ' WHERE a.sectionid IN ( '.$cids.' )'
-	. ' ORDER BY a.sectionid, a.catid, a.title'
-	;
-	$db->setQuery( $query );
-	$contents = $db->loadObjectList();
-
-	sections_html::copySectionSelect( $option, $cid, $categories, $contents, $section );
-}
-
-
-/**
-* Save the item(s) to the menu selected
-*/
-function copySectionSave( $sectionid, $scope )
-{
-	global $mainframe;
-
-	// Check for request forgeries.
-	$token = JUtility::getToken();
-	if (!JRequest::getInt($token, 0, 'post')) {
-		JError::raiseError(403, 'Request Forbidden');
-	}
-
-	$db			=& JFactory::getDBO();
-	$title		= JRequest::getString( 'title' );
-	$contentid	= JRequest::getVar( 'content' );
-	$categoryid = JRequest::getVar( 'category' );
-	JArrayHelper::toInteger($contentid);
-	JArrayHelper::toInteger($categoryid);
-
-	// copy section
-	$section =& JTable::getInstance('section');
-	foreach( $sectionid as $id ) {
-		$section->load( $id );
-		$section->id 	= NULL;
-		$section->title = $title;
-		$section->name 	= $title;
-		if ( !$section->check() ) {
-			copySectionSelect('com_sections', $sectionid, $scope );
-			JError::raiseWarning(500, $section->getError() );
-			return;
-		}
-
-		if ( !$section->store() ) {
-			JError::raiseError(500, $section->getError() );
-		}
-		$section->checkin();
-		$section->reorder( 'scope = '.$db->Quote($section->scope) );
-		// stores original catid
-		$newsectids[]["old"] = $id;
-		// pulls new catid
-		$newsectids[]["new"] = $section->id;
-	}
-	$sectionMove = $section->id;
-
-	// copy categories
-	$category =& JTable::getInstance('category');
-	foreach( $categoryid as $id ) {
-		$category->load( $id );
-		$category->id = NULL;
-		$category->section = $sectionMove;
-		foreach( $newsectids as $newsectid ) {
-			if ( $category->section == $newsectid["old"] ) {
-				$category->section = $newsectid["new"];
-			}
-		}
-		if (!$category->check()) {
-			JError::raiseError(500, $category->getError() );
-		}
-
-		if (!$category->store()) {
-			JError::raiseError(500, $category->getError() );
-		}
-		$category->checkin();
-		$category->reorder( 'section = '.$db->Quote($category->section) );
-		// stores original catid
-		$newcatids[]["old"] = $id;
-		// pulls new catid
-		$newcatids[]["new"] = $category->id;
-	}
-
-	$content =& JTable::getInstance('content');
-	foreach( $contentid as $id) {
-		$content->load( $id );
-		$content->id = NULL;
-		$content->hits = 0;
-		foreach( $newsectids as $newsectid ) {
-			if ( $content->sectionid == $newsectid["old"] ) {
-				$content->sectionid = $newsectid["new"];
-			}
-		}
-		foreach( $newcatids as $newcatid ) {
-			if ( $content->catid == $newcatid["old"] ) {
-				$content->catid = $newcatid["new"];
-			}
-		}
-		if (!$content->check()) {
-			JError::raiseError(500, $content->getError() );
-		}
-
-		if (!$content->store()) {
-			JError::raiseError(500, $content->getError() );
-		}
-		$content->checkin();
-	}
-	$sectionOld =& JTable::getInstance('section');
-	$sectionOld->load( $sectionMove );
-
-	$msg = JText::sprintf( 'DESCCATANDITEMSCOPIED', $sectionOld-> name, $title );
-	$mainframe->redirect( 'index.php?option=com_sections&scope=content', $msg );
-}
-
-/**
-* changes the access level of a record
-* @param integer The increment to reorder by
-*/
-function accessMenu( $uid, $access, $option )
-{
-	global $mainframe;
-
-	// Check for request forgeries.
-	$token = JUtility::getToken();
-	if (!JRequest::getInt($token, 0, 'post')) {
-		JError::raiseError(403, 'Request Forbidden');
-	}
-
-	$db	=& JFactory::getDBO();
-	$row =& JTable::getInstance('section');
-	$row->load( $uid );
-	$row->access = $access;
-
-	if ( !$row->check() ) {
-		return $row->getError();
-	}
-	if ( !$row->store() ) {
-		return $row->getError();
-	}
-
-	$mainframe->redirect( 'index.php?option='. $option .'&scope='. $row->scope );
-}
-
-function saveOrder( &$cid )
-{
-	global $mainframe;
-
-	// Check for request forgeries.
-	$token = JUtility::getToken();
-	if (!JRequest::getInt($token, 0, 'post')) {
-		JError::raiseError(403, 'Request Forbidden');
-	}
-
-	$db			=& JFactory::getDBO();
-	$row		=& JTable::getInstance('section');
-
-	$total		= count( $cid );
-	$order		= JRequest::getVar( 'order', array(0), 'post', 'array' );
-	JArrayHelper::toInteger($order, array(0));
-
-	// update ordering values
-	for( $i=0; $i < $total; $i++ )
-	{
-		$row->load( (int) $cid[$i] );
-		if ($row->ordering != $order[$i]) {
-			$row->ordering = $order[$i];
-			if (!$row->store()) {
-				JError::raiseError(500, $db->getErrorMsg() );
-			}
-		}
-	}
-
-	$row->reorder( );
-
-	$msg 	= JText::_( 'New ordering saved' );
-	$mainframe->redirect( 'index.php?option=com_sections&scope=content', $msg );
-}
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/config.xml
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/config.xml	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/config.xml	(revision 0)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<config>
+ <params>
+ </params>
+</config>
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/sections.xml
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/sections.xml	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/sections.xml	(revision 0)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<install type="component" version="1.5.0">
+	<name>Sections</name>
+	<author>Joomla! Project</author>
+	<creationDate>December 2007</creationDate>
+	<copyright>(C) 2005 - 2008 Open Source Matters. All rights reserved.</copyright>
+	<license>http://www.gnu.org/licenses/gpl-2.0.html GNU/GPL</license>
+	<authorEmail>admin@joomla.org</authorEmail>
+	<authorUrl>www.joomla.org</authorUrl>
+	<version>1.5.0</version>
+	<description>This component manages sections</description>
+</install>
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/admin.sections.html.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/admin.sections.html.php	(revision 9787)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/admin.sections.html.php	(working copy)
@@ -1,435 +0,0 @@
-<?php
-/**
-* @version		$Id$
-* @package		Joomla
-* @subpackage	Sections
-* @copyright	Copyright (C) 2005 - 2008 Open Source Matters. All rights reserved.
-* @license		GNU/GPL, see LICENSE.php
-* Joomla! is free software. This version may have been modified pursuant
-* to the GNU General Public License, and as distributed it includes or
-* is derivative of works licensed under the GNU General Public License or
-* other free or open source software licenses.
-* See COPYRIGHT.php for copyright notices and details.
-*/
-
-// no direct access
-defined( '_JEXEC' ) or die( 'Restricted access' );
-
-/**
-* @package		Joomla
-* @subpackage	Sections
-*/
-class sections_html
-{
-	/**
-	* Writes a list of the categories for a section
-	* @param array An array of category objects
-	* @param string The name of the category section
-	*/
-	function show( &$rows, $scope, $myid, &$page, $option, &$lists )
-	{
-		$limitstart = JRequest::getVar('limitstart', '0', '', 'int');
-
-		$user =& JFactory::getUser();
-
-		//Ordering allowed ?
-		$ordering = ($lists['order'] == 's.ordering');
-
-		JHTML::_('behavior.tooltip');
-		?>
-		<form action="index.php?option=com_sections&amp;scope=<?php echo $scope; ?>" method="post" name="adminForm">
-
-		<table>
-		<tr>
-			<td align="left" width="100%">
-				<?php echo JText::_( 'Filter' ); ?>:
-				<input type="text" name="search" id="search" value="<?php echo $lists['search'];?>" class="text_area" onchange="document.adminForm.submit();" />
-				<button onclick="this.form.submit();"><?php echo JText::_( 'Go' ); ?></button>
-				<button onclick="document.getElementById('search').value='';this.form.submit();"><?php echo JText::_( 'Reset' ); ?></button>
-			</td>
-			<td nowrap="nowrap">
-				<?php
-				echo $lists['state'];
-				?>
-			</td>
-		</tr>
-		</table>
-
-		<table class="adminlist">
-		<thead>
-			<tr>
-				<th width="10">
-					<?php echo JText::_( 'NUM' ); ?>
-				</th>
-				<th width="10">
-					<input type="checkbox" name="toggle" value="" onclick="checkAll(<?php echo count( $rows );?>);" />
-				</th>
-				<th class="title">
-					<?php echo JHTML::_('grid.sort',   'Title', 's.title', @$lists['order_Dir'], @$lists['order'] ); ?>
-				</th>
-				<th width="5%">
-					<?php echo JHTML::_('grid.sort',   'Published', 's.published', @$lists['order_Dir'], @$lists['order'] ); ?>
-				</th>
-				<th width="8%" nowrap="nowrap">
-					<?php echo JHTML::_('grid.sort',   'Order', 's.ordering', @$lists['order_Dir'], @$lists['order'] ); ?>
-					<?php echo JHTML::_('grid.order',  $rows ); ?>
-				</th>
-				<th width="10%">
-					<?php echo JHTML::_('grid.sort',   'Access', 'groupname', @$lists['order_Dir'], @$lists['order'] ); ?>
-				</th>
-				<th width="5%" nowrap="nowrap">
-					<?php echo JText::_( 'Num Categories' ); ?>
-				</th>
-				<th width="5%" nowrap="nowrap">
-					<?php echo JText::_( 'Num Active' ); ?>
-				</th>
-				<th width="5%" nowrap="nowrap">
-					<?php echo JText::_( 'Num Trash' ); ?>
-				</th>
-				<th width="1%" nowrap="nowrap">
-					<?php echo JHTML::_('grid.sort',   'ID', 's.id', @$lists['order_Dir'], @$lists['order'] ); ?>
-				</th>
-			</tr>
-		</thead>
-		<tfoot>
-			<tr>
-				<td colspan="13">
-					<?php echo $page->getListFooter(); ?>
-				</td>
-			</tr>
-		</tfoot>
-		<tbody>
-		<?php
-		$k = 0;
-		for ( $i=0, $n=count( $rows ); $i < $n; $i++ ) {
-			$row = &$rows[$i];
-
-			$link 		= 'index.php?option=com_sections&scope=content&task=edit&cid[]='. $row->id;
-
-			$access 	= JHTML::_('grid.access',   $row, $i );
-			$checked 	= JHTML::_('grid.checkedout',   $row, $i );
-			$published 	= JHTML::_('grid.published', $row, $i );
-			?>
-			<tr class="<?php echo "row$k"; ?>">
-				<td align="center">
-					<?php echo $page->getRowOffset( $i ); ?>
-				</td>
-				<td>
-					<?php echo $checked; ?>
-				</td>
-				<td>
-					<span class="editlinktip hasTip" title="<?php echo JText::_( 'Title' );?>::<?php echo $row->title; ?>">
-					<?php
-					if (  JTable::isCheckedOut($user->get ('id'), $row->checked_out ) ) {
-						echo $row->title;
-					} else {
-						?>
-						<a href="<?php echo JRoute::_( $link ); ?>">
-							<?php echo $row->title; ?></a>
-						<?php
-					}
-					?></span>
-				</td>
-				<td align="center">
-					<?php echo $published;?>
-				</td>
-				<td class="order">
-					<span><?php echo $page->orderUpIcon( $i, true, 'orderup', 'Move Up', $ordering ); ?></span>
-					<span><?php echo $page->orderDownIcon( $i, $n, true, 'orderdown', 'Move Down', $ordering ); ?></span>
-					<?php $disabled = $ordering ?  '' : 'disabled="disabled"'; ?>
-					<input type="text" name="order[]" size="5" value="<?php echo $row->ordering; ?>" <?php echo $disabled ?> class="text_area" style="text-align: center" />
-				</td>
-				<td align="center">
-					<?php echo $access;?>
-				</td>
-				<td align="center">
-					<?php echo $row->categories; ?>
-				</td>
-				<td align="center">
-					<?php echo $row->active; ?>
-				</td>
-				<td align="center">
-					<?php echo $row->trash; ?>
-				</td>
-				<td align="center">
-					<?php echo $row->id; ?>
-				</td>
-				<?php
-				$k = 1 - $k;
-				?>
-			</tr>
-			<?php
-		}
-		?>
-		</tbody>
-		</table>
-
-		<input type="hidden" name="<?php echo JUtility::getToken(); ?>" value="1" />
-		<input type="hidden" name="option" value="<?php echo $option;?>" />
-		<input type="hidden" name="scope" value="<?php echo $scope;?>" />
-		<input type="hidden" name="task" value="" />
-		<input type="hidden" name="chosen" value="" />
-		<input type="hidden" name="act" value="" />
-		<input type="hidden" name="boxchecked" value="0" />
-		<input type="hidden" name="filter_order" value="<?php echo $lists['order']; ?>" />
-		<input type="hidden" name="filter_order_Dir" value="<?php echo $lists['order_Dir']; ?>" />
-		</form>
-		<?php
-	}
-
-	/**
-	* Writes the edit form for new and existing categories
-	*
-	* A new record is defined when <var>$row</var> is passed with the <var>id</var>
-	* property set to 0.  Note that the <var>section</var> property <b>must</b> be defined
-	* even for a new record.
-	* @param JTableCategory The category object
-	* @param string The html for the image list select list
-	* @param string The html for the image position select list
-	* @param string The html for the ordering list
-	* @param string The html for the groups select list
-	*/
-	function edit( &$row, $option, &$lists )
-	{
-		JRequest::setVar( 'hidemainmenu', 1 );
-
-		global $mainframe;
-
-		$editor =& JFactory::getEditor();
-
-		if ( $row->name != '' ) {
-			$name = $row->name;
-		} else {
-			$name = JText::_( 'New Section' );
-		}
-		if ($row->image == '') {
-			$row->image = 'blank.png';
-		}
-
-		JFilterOutput::objectHTMLSafe( $row, ENT_QUOTES, 'description' );
-		?>
-		<script language="javascript" type="text/javascript">
-		function submitbutton(pressbutton) {
-			var form = document.adminForm;
-			if (pressbutton == 'cancel') {
-				submitform( pressbutton );
-				return;
-			}
-
-			if ( form.title.value == '' ){
-				alert("<?php echo JText::_( 'Section must have a title', true ); ?>");
-			} else {
-				<?php
-				echo $editor->save( 'description' ) ; ?>
-				submitform(pressbutton);
-			}
-		}
-		</script>
-
-		<form action="index.php" method="post" name="adminForm">
-
-		<div class="col width-60">
-			<fieldset class="adminform">
-				<legend><?php echo JText::_( 'Details' ); ?></legend>
-
-				<table class="admintable">
-				<tr>
-					<td width="100" class="key">
-						<?php echo JText::_( 'Scope' ); ?>:
-					</td>
-					<td colspan="2">
-						<strong>
-						<?php echo $row->scope; ?>
-						</strong>
-					</td>
-				</tr>
-				<tr>
-					<td class="key">
-						<label for="title">
-							<?php echo JText::_( 'Title' ); ?>:
-						</label>
-					</td>
-					<td colspan="2">
-						<input class="text_area" type="text" name="title" id="title" value="<?php echo $row->title; ?>" size="50" maxlength="50" title="<?php echo JText::_( 'TIPTITLEFIELD' ); ?>" />
-					</td>
-				</tr>
-				<tr>
-					<td nowrap="nowrap" class="key">
-						<label for="alias">
-							<?php echo JText::_( 'Alias' ); ?>:
-						</label>
-					</td>
-					<td colspan="2">
-						<input class="text_area" type="text" name="alias" id="alias" value="<?php echo $row->alias; ?>" size="50" maxlength="255" title="<?php echo JText::_( 'TIPNAMEFIELD' ); ?>" />
-					</td>
-				</tr>
-				<tr>
-					<td class="key">
-						<?php echo JText::_( 'Published' ); ?>:
-					</td>
-					<td colspan="2">
-						<?php echo $lists['published']; ?>
-					</td>
-				</tr>
-				<tr>
-					<td class="key">
-						<label for="ordering">
-							<?php echo JText::_( 'Ordering' ); ?>:
-						</label>
-					</td>
-					<td colspan="2">
-						<?php echo $lists['ordering']; ?>
-					</td>
-				</tr>
-				<tr>
-					<td nowrap="nowrap" valign="top" class="key">
-						<label for="access">
-							<?php echo JText::_( 'Access Level' ); ?>:
-						</label>
-					</td>
-					<td>
-						<?php echo $lists['access']; ?>
-					</td>
-					<td rowspan="4" width="50%">
-						<?php
-							$path = JURI::root() . 'images/';
-							if ($row->image != 'blank.png') {
-								$path.= 'stories/';
-							}
-						?>
-						<img src="<?php echo $path;?><?php echo $row->image;?>" name="imagelib" width="80" height="80" border="2" alt="<?php echo JText::_( 'Preview' ); ?>" />
-					</td>
-				</tr>
-				<tr>
-					<td class="key">
-						<label for="image">
-							<?php echo JText::_( 'Image' ); ?>:
-						</label>
-					</td>
-					<td>
-						<?php echo $lists['image']; ?>
-					</td>
-				</tr>
-				<tr>
-					<td nowrap="nowrap" class="key">
-						<label for="image_position">
-							<?php echo JText::_( 'Image Position' ); ?>:
-						</label>
-					</td>
-					<td>
-						<?php echo $lists['image_position']; ?>
-					</td>
-				</tr>
-				</table>
-			</fieldset>
-
-			<fieldset class="adminform">
-				<legend><?php echo JText::_( 'Description' ); ?></legend>
-
-				<table class="admintable">
-				<tr>
-					<td valign="top" colspan="3">
-						<?php
-						// parameters : areaname, content, width, height, cols, rows
-						echo $editor->display( 'description',  $row->description, '550', '300', '60', '20', array('pagebreak', 'readmore') ) ;
-						?>
-					</td>
-				</tr>
-				</table>
-			</fieldset>
-		</div>
-		<div class="clr"></div>
-
-		<input type="hidden" name="<?php echo JUtility::getToken(); ?>" value="1" />
-		<input type="hidden" name="option" value="<?php echo $option;?>" />
-		<input type="hidden" name="scope" value="<?php echo $row->scope; ?>" />
-		<input type="hidden" name="id" value="<?php echo $row->id; ?>" />
-		<input type="hidden" name="task" value="" />
-		<input type="hidden" name="oldtitle" value="<?php echo $row->title ; ?>" />
-		</form>
-		<?php
-	}
-
-
-	/**
-	* Form to select Section to copy Category to
-	*/
-	function copySectionSelect( $option, $cid, $categories, $contents, $section )
-	{
-		?>
-		<script language="javascript" type="text/javascript">
-		function submitbutton(pressbutton) {
-			var form = document.adminForm;
-			if (pressbutton == 'cancel') {
-				submitform( pressbutton );
-				return;
-			}
-
-			if ( form.title.value == '' ){
-				alert("<?php echo JText::_( 'Section must have a title', true ); ?>");
-			} else {
-				submitform(pressbutton);
-			}
-		}
-		</script>
-		<form action="index.php" method="post" name="adminForm">
-
-		<table class="adminform">
-		<tr>
-			<td width="3%"></td>
-			<td  valign="top" width="30%">
-			<strong><?php echo JText::_( 'Copy to Section' ); ?>:</strong>
-			<br />
-			<input class="text_area" type="text" name="title" value="" size="35" maxlength="50" title="<?php echo JText::_( 'The new Section Title' ); ?>" />
-			<br /><br />
-			</td>
-			<td  valign="top" width="20%">
-			<strong><?php echo JText::_( 'Categories being copied' ); ?>:</strong>
-			<br />
-			<?php
-			echo "<ol>";
-			foreach ( $categories as $category ) {
-				echo "<li>". $category->title ."</li>";
-				echo "\n <input type=\"hidden\" name=\"category[]\" value=\"$category->id\" />";
-			}
-			echo "</ol>";
-			?>
-			</td>
-			<td valign="top" width="20%">
-			<strong><?php echo JText::_( 'Articles being copied' ); ?>:</strong>
-			<br />
-			<?php
-			echo "<ol>";
-			foreach ( $contents as $content ) {
-				echo "<li>". $content->title ."</li>";
-				echo "\n <input type=\"hidden\" name=\"content[]\" value=\"$content->id\" />";
-			}
-			echo "</ol>";
-			?>
-			</td>
-			<td valign="top">
-			<?php echo JText::_( 'This will copy the Categories listed' ); ?>
-			<br />
-			<?php echo JText::_( 'DESCALLITEMSWITHINCAT' ); ?>
-			<br />
-			<?php echo JText::_( 'to the new Section created.' ); ?>
-			</td>.
-		</tr>
-		</table>
-		<br /><br />
-
-		<input type="hidden" name="<?php echo JUtility::getToken(); ?>" value="1" />
-		<input type="hidden" name="option" value="<?php echo $option;?>" />
-		<input type="hidden" name="section" value="<?php echo $section;?>" />
-		<input type="hidden" name="boxchecked" value="1" />
-		<input type="hidden" name="task" value="" />
-		<input type="hidden" name="scope" value="content" />
-		<?php
-		foreach ( $cid as $id ) {
-			echo "\n <input type=\"hidden\" name=\"cid[]\" value=\"$id\" />";
-		}
-		?>
-		</form>
-		<?php
-	}
-}
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/controller.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/controller.php	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/controller.php	(revision 0)
@@ -0,0 +1,519 @@
+<?php
+/**
+ * @version		$Id: $
+ * @package		Joomla
+ * @subpackage	Sections
+ * @copyright	Copyright (C) 2005 - 2008 Open Source Matters. All rights reserved.
+ * @license		GNU/GPL, see LICENSE.php
+ * Joomla! is free software. This version may have been modified pursuant to the
+ * GNU General Public License, and as distributed it includes or is derivative
+ * of works licensed under the GNU General Public License or other free or open
+ * source software licenses. See COPYRIGHT.php for copyright notices and
+ * details.
+ */
+
+// Check to ensure this file is included in Joomla!
+defined('_JEXEC') or die();
+
+jimport( 'joomla.application.component.controller' );
+
+/**
+ * Sections Controller
+ *
+ * @package		Joomla
+ * @subpackage	Sections
+ * @since 1.5
+ */
+class SectionsController extends JController
+{
+	function __construct($config = array())
+	{
+		parent::__construct($config);
+
+		// Register Extra tasks
+		$this->registerTask( 'add',  'display' );
+		$this->registerTask( 'edit', 'display' );
+		$this->registerTask( 'copyselect', 'display' );
+		$this->registerTask( 'apply', 'save' );
+		$this->registerTask( 'go2menu', 'save' );
+		$this->registerTask( 'go2menuitem', 'save' );
+	}
+
+	function display( )
+	{
+		switch($this->getTask())
+		{
+			case 'add'     :
+			{
+				JRequest::setVar( 'hidemainmenu', 1 );
+				JRequest::setVar( 'view'  , 'section');
+				JRequest::setVar( 'edit', false );
+
+				// Checkout the section
+				$model = $this->getModel('section');
+				$model->checkout();
+			} break;
+			case 'edit'    :
+			{
+				JRequest::setVar( 'hidemainmenu', 1 );
+				JRequest::setVar( 'view'  , 'section');
+				JRequest::setVar( 'edit', true );
+
+				// Checkout the section
+				$model = $this->getModel('section');
+				$model->checkout();
+			} break;
+			case 'copyselect'    :
+			{
+				JRequest::setVar( 'hidemainmenu', 1 );
+				JRequest::setVar( 'view'  , 'copyselect');
+			} break;
+		}
+
+		parent::display();
+	}
+
+	function save()
+	{
+		global $mainframe, $option;
+	
+		// Check for request forgeries.
+		$token = JUtility::getToken();
+		if (!JRequest::getInt($token, 0, 'post')) {
+			JError::raiseError(403, 'Request Forbidden');
+		}
+	
+		$db			=& JFactory::getDBO();
+		$menu		= JRequest::getVar( 'menu', 'mainmenu', 'post', 'string' );
+		$menuid		= JRequest::getVar( 'menuid', 0, 'post', 'int' );
+		$oldtitle	= JRequest::getVar( 'oldtitle', '', '', 'post', 'string' );
+		$task		= JRequest::getVar( 'task', '', '', 'post', 'string' );
+		$scope		= JRequest::getVar( 'scope', '' );
+
+		$post = JRequest::get('post');
+	
+		// fix up special html fields
+		$post['description'] = JRequest::getVar( 'description', '', 'post', 'string', JREQUEST_ALLOWRAW );
+	
+		$row =& JTable::getInstance('section');
+		if (!$row->bind($post)) {
+			JError::raiseError(500, $row->getError() );
+		}
+		if (!$row->check()) {
+			JError::raiseError(500, $row->getError() );
+		}
+		if ( $oldtitle ) {
+			if ( $oldtitle <> $row->title ) {
+				$query = 'UPDATE #__menu'
+				. ' SET name = '.$db->Quote($row->title)
+				. ' WHERE name = '.$db->Quote($oldtitle)
+				. ' AND type = "content_section"'
+				;
+				$db->setQuery( $query );
+				$db->query();
+			}
+		}
+	
+		// if new item order last in appropriate group
+		if (!$row->id) {
+			$row->ordering = $row->getNextOrder();
+		}
+	
+		if (!$row->store()) {
+			JError::raiseError(500, $row->getError() );
+		}
+		$row->checkin();
+
+		switch ( $task )
+		{
+			case 'go2menu':
+				$mainframe->redirect( 'index.php?option=com_menus&menutype='. $menu );
+				break;
+	
+			case 'go2menuitem':
+				$mainframe->redirect( 'index.php?option=com_menus&menutype='. $menu .'&task=edit&id='. $menuid );
+				break;
+	
+			case 'apply':
+				$msg = JText::_( 'Changes to Section saved' );
+				$mainframe->redirect( 'index.php?option='. $option .'&scope='. $scope .'&task=edit&cid[]='. $row->id, $msg );
+				break;
+	
+			case 'save':
+			default:
+				$msg = JText::_( 'Section saved' );
+				$mainframe->redirect( 'index.php?option='. $option .'&scope='. $scope, $msg );
+				break;
+		}
+	}
+
+	function copyselect()
+	{
+		// Check for request forgeries.
+		$token = JUtility::getToken();
+		if (!JRequest::getInt($token, 0, 'post')) {
+			JError::raiseError(403, 'Request Forbidden');
+		}
+
+		$cid = JRequest::getVar( 'cid', array(), 'post', 'array' );
+		JArrayHelper::toInteger($cid);
+
+		$msg = '';
+		$model = $this->getModel('section');
+		if(!$model->setAccess($cid, 2)) {
+			$msg = $model->getError();
+		}
+
+		$scope = JRequest::getCmd( 'scope' );
+		$this->setRedirect( 'index.php?option=com_sections&scope='.$scope, $msg );
+	}
+
+	function copysave()
+	{
+		global $mainframe;
+	
+		// Check for request forgeries.
+		$token = JUtility::getToken();
+		if (!JRequest::getInt($token, 0, 'post')) {
+			JError::raiseError(403, 'Request Forbidden');
+		}
+	
+		$db			=& JFactory::getDBO();
+		$scope		= JRequest::getString( 'scope' );
+		$sectionid	= JRequest::getVar( 'cid' );
+		$contentid	= JRequest::getVar( 'content' );
+		$categoryid = JRequest::getVar( 'category' );
+		JArrayHelper::toInteger($sectionid);
+		JArrayHelper::toInteger($contentid);
+		JArrayHelper::toInteger($categoryid);
+	
+		// copy section
+		$copied = array();
+		$section =& JTable::getInstance('section');
+		foreach( $sectionid as $id ) {
+			$section->load( $id );
+			$section->id 	= NULL;
+
+			// Adds name to list
+			$copied[] = $section->name;
+
+			// Make new section names less ambiguous
+			$section->title = JTEXT::sprintf('Copy of', $section->title);
+			$section->name 	= JTEXT::sprintf('Copy of', $section->name);
+
+			if ( !$section->check() ) {
+				copySectionSelect('com_sections', $sectionid, $scope );
+				JError::raiseWarning(500, $section->getError() );
+				return;
+			}
+	
+			if ( !$section->store() ) {
+				JError::raiseError(500, $section->getError() );
+			}
+			$section->checkin();
+			$section->reorder( 'scope = '.$db->Quote($section->scope) );
+			// stores original catid
+			$newsectids[]["old"] = $id;
+			// pulls new catid
+			$newsectids[]["new"] = $section->id;
+		}
+	
+		// copy categories
+		$category =& JTable::getInstance('category');
+		foreach( $categoryid as $id ) {
+			$category->load( $id );
+			$category->id = NULL;
+			// Make new category names less ambiguous
+			$category->title = JTEXT::sprintf('Copy of', $category->title);
+			$category->name = JTEXT::sprintf('Copy of', $category->name);
+
+			foreach( $newsectids as $newsectid ) {
+				if ( $category->section == $newsectid["old"] ) {
+					$category->section = $newsectid["new"];
+				}
+			}
+			if (!$category->check()) {
+				JError::raiseError(500, $category->getError() );
+			}
+	
+			if (!$category->store()) {
+				JError::raiseError(500, $category->getError() );
+			}
+			$category->checkin();
+			$category->reorder( 'section = '.$db->Quote($category->section) );
+			// stores original catid
+			$newcatids[]["old"] = $id;
+			// pulls new catid
+			$newcatids[]["new"] = $category->id;
+		}
+	
+		$content =& JTable::getInstance('content');
+		foreach( $contentid as $id) {
+			$content->load( $id );
+			$content->id = NULL;
+			$content->hits = 0;
+			// Make new article names less ambiguous
+			$content->title = JText::sprintf('Copy of', $content->title);
+			foreach( $newsectids as $newsectid ) {
+				if ( $content->sectionid == $newsectid["old"] ) {
+					$content->sectionid = $newsectid["new"];
+				}
+			}
+			foreach( $newcatids as $newcatid ) {
+				if ( $content->catid == $newcatid["old"] ) {
+					$content->catid = $newcatid["new"];
+				}
+			}
+			if (!$content->check()) {
+				JError::raiseError(500, $content->getError() );
+			}
+	
+			if (!$content->store()) {
+				JError::raiseError(500, $content->getError() );
+			}
+			$content->checkin();
+		}
+		$msg = JText::sprintf( 'DESCCATANDITEMSCOPIED', implode(', ', $copied) );
+		$mainframe->redirect( 'index.php?option=com_sections&scope=content', $msg );
+	}
+
+	function remove()
+	{
+		// Check for request forgeries.
+		$token = JUtility::getToken();
+		if (!JRequest::getInt($token, 0, 'post')) {
+			JError::raiseError(403, 'Request Forbidden');
+		}
+
+		$db =& JFactory::getDBO();
+		$scope = JRequest::getCmd( 'scope' );
+		$cid = JRequest::getVar( 'cid', array(), 'post', 'array' );
+		JArrayHelper::toInteger($cid);
+		if (count( $cid ) < 1) {
+			JError::raiseError(500, JText::_( 'Select a section to delete', true ) );
+		}
+	
+		$cids = implode( ',', $cid );
+
+		$query = 'SELECT s.id, s.name, COUNT(c.id) AS numcat'
+		. ' FROM #__sections AS s'
+		. ' LEFT JOIN #__categories AS c ON c.section=s.id'
+		. ' WHERE s.id IN ( '.$cids.' )'
+		. ' GROUP BY s.id'
+		;
+		$db->setQuery( $query );
+		if (!($rows = $db->loadObjectList())) {
+			echo "<script> alert('".$db->getErrorMsg(true)."'); window.history.go(-1); </script>\n";
+		}
+	
+		$err = array();
+		$cid = array();
+		foreach ($rows as $row) {
+			if ($row->numcat == 0) {
+				$cid[]	= (int) $row->id;
+				$name[]	= $row->name;
+			} else {
+				$err[]	= $row->name;
+			}
+		}
+	
+		if (count( $cid ))
+		{
+			$cids = implode( ',', $cid );
+			$query = 'DELETE FROM #__sections'
+			. ' WHERE id IN ( '.$cids.' )'
+			;
+			$db->setQuery( $query );
+			if (!$db->query()) {
+				echo "<script> alert('".$db->getErrorMsg(true)."'); window.history.go(-1); </script>\n";
+			}
+		}
+	
+		if (count( $err ))
+		{
+			$cids = implode( ', ', $err );
+			$msg = JText::sprintf( 'DESCCANNOTBEREMOVED', $cids );
+		}
+		else
+		{
+			$names = implode( ', ', $name );
+			$msg = JText::sprintf( 'Sections successfully deleted', $names );
+		}
+		$this->setRedirect( 'index.php?option=com_sections&scope='.$scope, $msg );
+	}
+
+
+	function publish()
+	{
+		// Check for request forgeries.
+		$token = JUtility::getToken();
+		if (!JRequest::getInt($token, 0, 'post')) {
+			JError::raiseError(403, 'Request Forbidden');
+		}
+
+		$cid = JRequest::getVar( 'cid', array(), 'post', 'array' );
+		JArrayHelper::toInteger($cid);
+
+		if (count( $cid ) < 1) {
+			JError::raiseError(500, JText::_( 'Select an item to publish' ) );
+		}
+
+		$model = $this->getModel('section');
+		if(!$model->publish($cid, 1)) {
+			echo "<script> alert('".$model->getError(true)."'); window.history.go(-1); </script>\n";
+		}
+
+		$scope = JRequest::getCmd( 'scope' );
+		$this->setRedirect( 'index.php?option=com_sections&scope='.$scope );
+	}
+
+
+	function unpublish()
+	{
+		// Check for request forgeries.
+		$token = JUtility::getToken();
+		if (!JRequest::getInt($token, 0, 'post')) {
+			JError::raiseError(403, 'Request Forbidden');
+		}
+
+		$cid = JRequest::getVar( 'cid', array(), 'post', 'array' );
+		JArrayHelper::toInteger($cid);
+
+		if (count( $cid ) < 1) {
+			JError::raiseError(500, JText::_( 'Select an item to unpublish' ) );
+		}
+
+		$model = $this->getModel('section');
+		if(!$model->publish($cid, 0)) {
+			echo "<script> alert('".$model->getError(true)."'); window.history.go(-1); </script>\n";
+		}
+
+		$scope = JRequest::getCmd( 'scope' );
+		$this->setRedirect( 'index.php?option=com_sections&scope='.$scope );
+	}
+
+	function cancel()
+	{
+		// Checkin the section
+		$model = $this->getModel('section');
+		$model->checkin();
+
+		$scope = JRequest::getCmd( 'scope' );
+		$this->setRedirect( 'index.php?option=com_sections&scope='.$scope );
+	}
+
+
+	function orderup()
+	{
+		// Check for request forgeries.
+		$token = JUtility::getToken();
+		if (!JRequest::getInt($token, 0, 'post')) {
+			JError::raiseError(403, 'Request Forbidden');
+		}
+
+		$model = $this->getModel('section');
+		$model->move(-1);
+
+		$scope = JRequest::getCmd( 'scope' );
+		$this->setRedirect( 'index.php?option=com_sections&scope='.$scope );
+	}
+
+	function orderdown()
+	{
+		// Check for request forgeries.
+		$token = JUtility::getToken();
+		if (!JRequest::getInt($token, 0, 'post')) {
+			JError::raiseError(403, 'Request Forbidden');
+		}
+
+		$model = $this->getModel('section');
+		$model->move(1);
+
+		$scope = JRequest::getCmd( 'scope' );
+		$this->setRedirect( 'index.php?option=com_sections&scope='.$scope );
+	}
+
+	function saveorder()
+	{
+		// Check for request forgeries.
+		$token = JUtility::getToken();
+		if (!JRequest::getInt($token, 0, 'post')) {
+			JError::raiseError(403, 'Request Forbidden');
+		}
+
+		$cid 	= JRequest::getVar( 'cid', array(), 'post', 'array' );
+		$order 	= JRequest::getVar( 'order', array(), 'post', 'array' );
+		JArrayHelper::toInteger($cid);
+		JArrayHelper::toInteger($order);
+
+		$model = $this->getModel('section');
+		$model->saveorder($cid, $order);
+
+		$msg = 'New ordering saved';
+		$scope = JRequest::getCmd( 'scope' );
+		$this->setRedirect( 'index.php?option=com_sections&scope='.$scope, $msg );
+	}
+
+	function accesspublic()
+	{
+		// Check for request forgeries.
+		$token = JUtility::getToken();
+		if (!JRequest::getInt($token, 0, 'post')) {
+			JError::raiseError(403, 'Request Forbidden');
+		}
+
+		$cid = JRequest::getVar( 'cid', array(), 'post', 'array' );
+		JArrayHelper::toInteger($cid);
+
+		$msg = '';
+		$model = $this->getModel('section');
+		if(!$model->setAccess($cid, 0)) {
+			$msg = $model->getError();
+		}
+
+		$scope = JRequest::getCmd( 'scope' );
+		$this->setRedirect( 'index.php?option=com_sections&scope='.$scope, $msg );
+	}
+
+	function accessregistered()
+	{
+		// Check for request forgeries.
+		$token = JUtility::getToken();
+		if (!JRequest::getInt($token, 0, 'post')) {
+			JError::raiseError(403, 'Request Forbidden');
+		}
+
+		$cid = JRequest::getVar( 'cid', array(), 'post', 'array' );
+		JArrayHelper::toInteger($cid);
+
+		$msg = '';
+		$model = $this->getModel('section');
+		if(!$model->setAccess($cid, 1)) {
+			$msg = $model->getError();
+		}
+
+		$scope = JRequest::getCmd( 'scope' );
+		$this->setRedirect( 'index.php?option=com_sections&scope='.$scope, $msg );
+	}
+
+	function accessspecial()
+	{
+		// Check for request forgeries.
+		$token = JUtility::getToken();
+		if (!JRequest::getInt($token, 0, 'post')) {
+			JError::raiseError(403, 'Request Forbidden');
+		}
+
+		$cid = JRequest::getVar( 'cid', array(), 'post', 'array' );
+		JArrayHelper::toInteger($cid);
+
+		$msg = '';
+		$model = $this->getModel('section');
+		if(!$model->setAccess($cid, 2)) {
+			$msg = $model->getError();
+		}
+
+		$scope = JRequest::getCmd( 'scope' );
+		$this->setRedirect( 'index.php?option=com_sections&scope='.$scope, $msg );
+	}
+}
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/tables/index.html
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/tables/index.html	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/tables/index.html	(revision 0)
@@ -0,0 +1 @@
+<html><body bgcolor="#FFFFFF"></body></html>
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/tables/section.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/tables/section.php	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/tables/section.php	(revision 0)
@@ -0,0 +1,82 @@
+<?php
+/**
+ * @version		$Id: $
+ * @package		Joomla
+ * @subpackage	Sections
+ * @copyright	Copyright (C) 2005 - 2008 Open Source Matters. All rights reserved.
+ * @license		GNU/GPL, see LICENSE.php
+ * Joomla! is free software. This version may have been modified pursuant to the
+ * GNU General Public License, and as distributed it includes or is derivative
+ * of works licensed under the GNU General Public License or other free or open
+ * source software licenses. See COPYRIGHT.php for copyright notices and
+ * details.
+ */
+
+// Check to ensure this file is included in Joomla!
+defined('_JEXEC') or die();
+
+
+/**
+ * @package		Joomla
+ * @subpackage	Sections
+ */
+class TableSection extends JTable
+{
+	/** @var int Primary key */
+	var $id 				= null;
+	/** @var string */
+	var $name 				= null;
+	/** @var string */
+	var $alias				= null;
+	/** @var string */
+	var $title 				= null;
+	/** @var string */
+	var $image 				= null;
+	/** @var string */
+	var $image_position		= null;
+	/** @var string */
+	var $scope	 			= null;
+	/** @var string */
+	var $description		= null;
+	/** @var string */
+	var $count 				= 0;
+	/** @var int */
+	var $published 			= 0;
+	/** @var int */
+	var $checked_out 		= 0;
+	/** @var datetime */
+	var $checked_out_time 	= 0;
+	/** @var int */
+	var $ordering 			= null;
+	/** @var string */
+	var $params 				= null;
+	/** @var int */
+	var $access 				= null;
+
+	/**
+	* @param database A database connector object
+	*/
+	function __construct(&$db)
+	{
+		parent::__construct( '#__sections', 'id', $db );
+	}
+
+	/**
+	 * Overloaded check function
+	 *
+	 * @access public
+	 * @return boolean
+	 * @see JTable::check
+	 * @since 1.5
+	 */
+	function check()
+	{
+		$alias = JFilterOutput::stringURLSafe($this->name);
+
+		if(empty($this->alias) || $this->alias === $alias ) {
+			$this->alias = $alias;
+		}
+
+		return true;
+	}
+}
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/section/view.html.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/section/view.html.php	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/section/view.html.php	(revision 0)
@@ -0,0 +1,86 @@
+<?php
+/**
+* @version		$Id: $
+* @package		Joomla
+* @subpackage	Sections
+* @copyright	Copyright (C) 2005 - 2008 Open Source Matters. All rights reserved.
+* @license		GNU/GPL, see LICENSE.php
+* Joomla! is free software. This version may have been modified pursuant
+* to the GNU General Public License, and as distributed it includes or
+* is derivative of works licensed under the GNU General Public License or
+* other free or open source software licenses.
+* See COPYRIGHT.php for copyright notices and details.
+*/
+
+// Check to ensure this file is included in Joomla!
+defined('_JEXEC') or die();
+
+jimport( 'joomla.application.component.view');
+
+/**
+ * HTML View class for the Sections component
+ *
+ * @static
+ * @package		Joomla
+ * @subpackage	Sections
+ * @since 1.0
+ */
+class SectionsViewSection extends JView
+{
+	function display($tpl = null)
+	{
+		global $mainframe;
+
+		$db			=& JFactory::getDBO();
+		$user 		=& JFactory::getUser();
+	
+		$option		= JRequest::getCmd( 'option');
+		$scope		= JRequest::getCmd( 'scope' );
+		$cid		= JRequest::getVar( 'cid', array(0), '', 'array' );
+		JArrayHelper::toInteger($cid, array(0));
+		$model	=& $this->getModel();
+
+		//get the section
+		$row	=& $this->get('data');
+		$edit	= JRequest::getVar('edit',true);
+
+		// fail if checked out not by 'me'
+		if ($model->isCheckedOut( $user->get('id') )) {
+			$msg = JText::sprintf( 'DESCBEINGEDITTED', JText::_( 'The section' ), $row->title );
+			$mainframe->redirect( 'index.php?option='. $option .'&scope='. $row->scope, $msg );
+		}
+	
+		if ( $edit ) {
+			$model->checkout( $user->get('id') );
+		} else {
+			$row->scope 		= $scope;
+			$row->published 	= 1;
+		}
+	
+		// build the html select list for ordering
+		$query = 'SELECT ordering AS value, title AS text'
+		. ' FROM #__sections'
+		. ' WHERE scope='.$db->Quote($row->scope).' ORDER BY ordering'
+		;
+		if($edit)
+			$lists['ordering'] 			= JHTML::_('list.specificordering',  $row, $cid[0], $query );
+		else
+			$lists['ordering'] 			= JHTML::_('list.specificordering',  $row, '', $query );
+
+		// build the select list for the image positions
+		$active =  ( $row->image_position ? $row->image_position : 'left' );
+		$lists['image_position'] 	= JHTML::_('list.positions',  'image_position', $active, NULL, 0 );
+		// build the html select list for images
+		$lists['image'] 			= JHTML::_('list.images',  'image', $row->image );
+		// build the html select list for the group access
+		$lists['access'] 			= JHTML::_('list.accesslevel',  $row );
+		// build the html radio buttons for published
+		$lists['published'] 		= JHTML::_('select.booleanlist',  'published', 'class="inputbox"', $row->published );
+	
+		$this->assignRef('user',		$user);
+		$this->assignRef('lists',		$lists);
+		$this->assignRef('row',			$row);
+
+		parent::display($tpl);
+	}
+}
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/section/index.html
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/section/index.html	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/section/index.html	(revision 0)
@@ -0,0 +1 @@
+<html><body bgcolor="#FFFFFF"></body></html>
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/section/tmpl/default.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/section/tmpl/default.php	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/section/tmpl/default.php	(revision 0)
@@ -0,0 +1,163 @@
+<?php defined('_JEXEC') or die('Restricted access'); ?>
+
+<?php JHTML::_('behavior.tooltip'); ?>
+<?php JRequest::setVar( 'hidemainmenu', 1 ); ?>
+
+
+<?php
+	$editor =& JFactory::getEditor();
+
+	// Set toolbar items for the page
+	$edit	= JRequest::getVar('edit',true);
+	$text = ( $edit ? JText::_( 'Edit' ) : JText::_( 'New' ) );
+
+	JToolBarHelper::title( JText::_( 'Section' ).': <small><small>[ '. $text.' ]</small></small>', 'sections.png' );
+	JToolBarHelper::save();
+	JToolBarHelper::apply();
+	if ( $edit ) {
+		// for existing items the button is renamed `close`
+		JToolBarHelper::cancel( 'cancel', 'Close' );
+	} else {
+		JToolBarHelper::cancel();
+	}
+	JToolBarHelper::help( 'screen.sections.edit' );
+?>
+<script language="javascript" type="text/javascript">
+function submitbutton(pressbutton) {
+	var form = document.adminForm;
+	if (pressbutton == 'cancel') {
+		submitform( pressbutton );
+		return;
+	}
+
+	if ( form.title.value == '' ){
+		alert("<?php echo JText::_( 'Section must have a title', true ); ?>");
+	} else {
+		<?php
+		echo $editor->save( 'description' ) ; ?>
+		submitform(pressbutton);
+	}
+}
+</script>
+
+<form action="index.php" method="post" name="adminForm">
+
+<div class="col width-60">
+	<fieldset class="adminform">
+		<legend><?php echo JText::_( 'Details' ); ?></legend>
+
+		<table class="admintable">
+		<tr>
+			<td width="100" class="key">
+				<?php echo JText::_( 'Scope' ); ?>:
+			</td>
+			<td colspan="2">
+				<strong>
+				<?php echo $this->row->scope; ?>
+				</strong>
+			</td>
+		</tr>
+		<tr>
+			<td class="key">
+				<label for="title">
+					<?php echo JText::_( 'Title' ); ?>:
+				</label>
+			</td>
+			<td colspan="2">
+				<input class="text_area" type="text" name="title" id="title" value="<?php echo $this->row->title; ?>" size="50" maxlength="50" title="<?php echo JText::_( 'TIPTITLEFIELD' ); ?>" />
+			</td>
+		</tr>
+		<tr>
+			<td nowrap="nowrap" class="key">
+				<label for="alias">
+					<?php echo JText::_( 'Alias' ); ?>:
+				</label>
+			</td>
+			<td colspan="2">
+				<input class="text_area" type="text" name="alias" id="alias" value="<?php echo $this->row->alias; ?>" size="50" maxlength="255" title="<?php echo JText::_( 'TIPNAMEFIELD' ); ?>" />
+			</td>
+		</tr>
+		<tr>
+			<td class="key">
+				<?php echo JText::_( 'Published' ); ?>:
+			</td>
+			<td colspan="2">
+				<?php echo $this->lists['published']; ?>
+			</td>
+		</tr>
+		<tr>
+			<td class="key">
+				<label for="ordering">
+					<?php echo JText::_( 'Ordering' ); ?>:
+				</label>
+			</td>
+			<td colspan="2">
+				<?php echo $this->lists['ordering']; ?>
+			</td>
+		</tr>
+		<tr>
+			<td nowrap="nowrap" valign="top" class="key">
+				<label for="access">
+					<?php echo JText::_( 'Access Level' ); ?>:
+				</label>
+			</td>
+			<td>
+				<?php echo $this->lists['access']; ?>
+			</td>
+			<td rowspan="4" width="50%">
+				<?php
+					$path = JURI::root() . 'images/';
+					if ($this->row->image != 'blank.png') {
+						$path.= 'stories/';
+					}
+				?>
+				<img src="<?php echo $path;?><?php echo $this->row->image;?>" name="imagelib" width="80" height="80" border="2" alt="<?php echo JText::_( 'Preview' ); ?>" />
+			</td>
+		</tr>
+		<tr>
+			<td class="key">
+				<label for="image">
+					<?php echo JText::_( 'Image' ); ?>:
+				</label>
+			</td>
+			<td>
+				<?php echo $this->lists['image']; ?>
+			</td>
+		</tr>
+		<tr>
+			<td nowrap="nowrap" class="key">
+				<label for="image_position">
+					<?php echo JText::_( 'Image Position' ); ?>:
+				</label>
+			</td>
+			<td>
+				<?php echo $this->lists['image_position']; ?>
+			</td>
+		</tr>
+		</table>
+	</fieldset>
+
+	<fieldset class="adminform">
+		<legend><?php echo JText::_( 'Description' ); ?></legend>
+
+		<table class="admintable">
+		<tr>
+			<td valign="top" colspan="3">
+				<?php
+				// parameters : areaname, content, width, height, cols, rows
+				echo $editor->display( 'description',  $this->row->description, '550', '300', '60', '20', array('pagebreak', 'readmore') ) ;
+				?>
+			</td>
+		</tr>
+		</table>
+	</fieldset>
+</div>
+<div class="clr"></div>
+
+<input type="hidden" name="<?php echo JUtility::getToken(); ?>" value="1" />
+<input type="hidden" name="option" value="<?php echo $option;?>" />
+<input type="hidden" name="scope" value="<?php echo $this->row->scope; ?>" />
+<input type="hidden" name="id" value="<?php echo $this->row->id; ?>" />
+<input type="hidden" name="task" value="" />
+<input type="hidden" name="oldtitle" value="<?php echo $this->row->title ; ?>" />
+</form>
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/section/tmpl/index.html
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/section/tmpl/index.html	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/section/tmpl/index.html	(revision 0)
@@ -0,0 +1 @@
+<html><body bgcolor="#FFFFFF"></body></html>
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/sections/view.html.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/sections/view.html.php	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/sections/view.html.php	(revision 0)
@@ -0,0 +1,71 @@
+<?php
+/**
+* @version		$Id: $
+* @package		Joomla
+* @subpackage	Sections
+* @copyright	Copyright (C) 2005 - 2008 Open Source Matters. All rights reserved.
+* @license		GNU/GPL, see LICENSE.php
+* Joomla! is free software. This version may have been modified pursuant
+* to the GNU General Public License, and as distributed it includes or
+* is derivative of works licensed under the GNU General Public License or
+* other free or open source software licenses.
+* See COPYRIGHT.php for copyright notices and details.
+*/
+
+// Check to ensure this file is included in Joomla!
+defined('_JEXEC') or die();
+
+jimport( 'joomla.application.component.view');
+
+/**
+ * HTML View class for the Sections component
+ *
+ * @static
+ * @package		Joomla
+ * @subpackage	Sections
+ * @since 1.0
+ */
+class SectionsViewSections extends JView
+{
+	function display($tpl = null)
+	{
+		global $mainframe, $option;
+
+		// get parameters from the URL or submitted form
+		$scope 		= JRequest::getCmd( 'scope' );
+
+		$db					=& JFactory::getDBO();
+		$user				=& JFactory::getUser();
+		$filter_order		= $mainframe->getUserStateFromRequest( $option.'.filter_order',		'filter_order',		's.ordering',	'cmd' );
+		$filter_order_Dir	= $mainframe->getUserStateFromRequest( $option.'.filter_order_Dir',	'filter_order_Dir',	'',				'word' );
+		$filter_state		= $mainframe->getUserStateFromRequest( $option.'.filter_state',		'filter_state',		'',				'word' );
+		$search				= $mainframe->getUserStateFromRequest( $option.'.search',			'search',			'',				'string' );
+		$search				= JString::strtolower( $search );
+	
+		$limit		= $mainframe->getUserStateFromRequest( 'global.list.limit', 'limit', $mainframe->getCfg('list_limit'), 'int' );
+		$limitstart	= $mainframe->getUserStateFromRequest( $option.'.limitstart', 'limitstart', 0, 'int' );
+	
+		// Get data from the model
+		$rows		= & $this->get( 'Data');
+		$total		= & $this->get( 'Total');
+		$pagination = & $this->get( 'Pagination' );
+
+		// state filter
+		$lists['state']	= JHTML::_('grid.state',  $filter_state );
+	
+		// table ordering
+		$lists['order_Dir']	= $filter_order_Dir;
+		$lists['order']		= $filter_order;
+	
+		// search filter
+		$lists['search']= $search;
+	
+		$this->assignRef('user',		$user);
+		$this->assignRef('scope',		$scope);
+		$this->assignRef('lists',		$lists);
+		$this->assignRef('rows',		$rows);
+		$this->assignRef('pagination',	$pagination);
+
+		parent::display($tpl);
+	}
+}
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/sections/index.html
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/sections/index.html	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/sections/index.html	(revision 0)
@@ -0,0 +1 @@
+<html><body bgcolor="#FFFFFF"></body></html>
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/sections/tmpl/index.html
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/sections/tmpl/index.html	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/sections/tmpl/index.html	(revision 0)
@@ -0,0 +1 @@
+<html><body bgcolor="#FFFFFF"></body></html>
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/sections/tmpl/default.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/sections/tmpl/default.php	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/sections/tmpl/default.php	(revision 0)
@@ -0,0 +1,157 @@
+<?php defined('_JEXEC') or die('Restricted access'); ?>
+
+<?php
+	//Ordering allowed ?
+	$ordering = ($this->lists['order'] == 's.ordering');
+
+	JHTML::_('behavior.tooltip');
+?>
+
+<?php
+	// Set toolbar items for the page
+	JToolBarHelper::title( JText::_( 'Section Manager' ), 'sections.png' );
+	JToolBarHelper::publishList();
+	JToolBarHelper::unpublishList();
+	JToolBarHelper::customX( 'copyselect', 'copy.png', 'copy_f2.png', 'Copy', true );
+	JToolBarHelper::deleteList();
+	JToolBarHelper::editListX();
+	JToolBarHelper::addNewX();
+	JToolBarHelper::help( 'screen.sections' );
+?>
+<form action="index.php?option=com_sections&amp;scope=<?php echo $this->scope; ?>" method="post" name="adminForm">
+
+<table>
+<tr>
+	<td align="left" width="100%">
+		<?php echo JText::_( 'Filter' ); ?>:
+		<input type="text" name="search" id="search" value="<?php echo $this->lists['search'];?>" class="text_area" onchange="document.adminForm.submit();" />
+		<button onclick="this.form.submit();"><?php echo JText::_( 'Go' ); ?></button>
+		<button onclick="document.getElementById('search').value='';this.form.submit();"><?php echo JText::_( 'Reset' ); ?></button>
+	</td>
+	<td nowrap="nowrap">
+		<?php
+		echo $this->lists['state'];
+		?>
+	</td>
+</tr>
+</table>
+
+<table class="adminlist">
+<thead>
+	<tr>
+		<th width="10">
+			<?php echo JText::_( 'NUM' ); ?>
+		</th>
+		<th width="10">
+			<input type="checkbox" name="toggle" value="" onclick="checkAll(<?php echo count( $this->rows );?>);" />
+		</th>
+		<th class="title">
+			<?php echo JHTML::_('grid.sort',   'Title', 's.title', @$this->lists['order_Dir'], @$this->lists['order'] ); ?>
+		</th>
+		<th width="5%">
+			<?php echo JHTML::_('grid.sort',   'Published', 's.published', @$this->lists['order_Dir'], @$this->lists['order'] ); ?>
+		</th>
+		<th width="10%" nowrap="nowrap">
+			<?php echo JHTML::_('grid.sort',   'Order', 's.ordering', @$this->lists['order_Dir'], @$this->lists['order'] ); ?>
+			<?php echo JHTML::_('grid.order',  $this->rows ); ?>
+		</th>
+		<th width="10%">
+			<?php echo JHTML::_('grid.sort',   'Access', 'groupname', @$this->lists['order_Dir'], @$this->lists['order'] ); ?>
+		</th>
+		<th width="5%" nowrap="nowrap">
+			<?php echo JText::_( 'Num Categories' ); ?>
+		</th>
+		<th width="5%" nowrap="nowrap">
+			<?php echo JText::_( 'Num Active' ); ?>
+		</th>
+		<th width="5%" nowrap="nowrap">
+			<?php echo JText::_( 'Num Trash' ); ?>
+		</th>
+		<th width="1%" nowrap="nowrap">
+			<?php echo JHTML::_('grid.sort',   'ID', 's.id', @$this->lists['order_Dir'], @$this->lists['order'] ); ?>
+		</th>
+	</tr>
+</thead>
+<tfoot>
+	<tr>
+		<td colspan="13">
+			<?php echo $this->pagination->getListFooter(); ?>
+		</td>
+	</tr>
+</tfoot>
+<tbody>
+<?php
+$k = 0;
+for ( $i=0, $n=count( $this->rows ); $i < $n; $i++ ) {
+	$row = &$this->rows[$i];
+
+	$link 		= 'index.php?option=com_sections&scope=content&task=edit&cid[]='. $row->id;
+
+	$access 	= JHTML::_('grid.access',   $row, $i );
+	$checked 	= JHTML::_('grid.checkedout',   $row, $i );
+	$published 	= JHTML::_('grid.published', $row, $i );
+	?>
+	<tr class="<?php echo "row$k"; ?>">
+		<td align="center">
+			<?php echo $this->pagination->getRowOffset( $i ); ?>
+		</td>
+		<td>
+			<?php echo $checked; ?>
+		</td>
+		<td>
+			<span class="editlinktip hasTip" title="<?php echo JText::_( 'Title' );?>::<?php echo $row->title; ?>">
+			<?php
+			if (  JTable::isCheckedOut($this->user->get ('id'), $row->checked_out ) ) {
+				echo $row->title;
+			} else {
+				?>
+				<a href="<?php echo JRoute::_( $link ); ?>">
+					<?php echo $row->title; ?></a>
+				<?php
+			}
+			?></span>
+		</td>
+		<td align="center">
+			<?php echo $published;?>
+		</td>
+		<td class="order">
+			<span><?php echo $this->pagination->orderUpIcon( $i, true, 'orderup', 'Move Up', $ordering ); ?></span>
+			<span><?php echo $this->pagination->orderDownIcon( $i, $n, true, 'orderdown', 'Move Down', $ordering ); ?></span>
+			<?php $disabled = $ordering ?  '' : 'disabled="disabled"'; ?>
+			<input type="text" name="order[]" size="5" value="<?php echo $row->ordering; ?>" <?php echo $disabled ?> class="text_area" style="text-align: center" />
+		</td>
+		<td align="center">
+			<?php echo $access;?>
+		</td>
+		<td align="center">
+			<?php echo $row->categories; ?>
+		</td>
+		<td align="center">
+			<?php echo $row->active; ?>
+		</td>
+		<td align="center">
+			<?php echo $row->trash; ?>
+		</td>
+		<td align="center">
+			<?php echo $row->id; ?>
+		</td>
+		<?php
+		$k = 1 - $k;
+		?>
+	</tr>
+	<?php
+}
+?>
+</tbody>
+</table>
+
+<input type="hidden" name="<?php echo JUtility::getToken(); ?>" value="1" />
+<input type="hidden" name="scope" value="<?php echo $this->scope;?>" />
+<input type="hidden" name="option" value="<?php echo $option; ?>" />
+<input type="hidden" name="task" value="" />
+<input type="hidden" name="chosen" value="" />
+<input type="hidden" name="act" value="" />
+<input type="hidden" name="boxchecked" value="0" />
+<input type="hidden" name="filter_order" value="<?php echo $this->lists['order']; ?>" />
+<input type="hidden" name="filter_order_Dir" value="<?php echo $this->lists['order_Dir']; ?>" />
+</form>
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/copyselect/view.html.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/copyselect/view.html.php	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/copyselect/view.html.php	(revision 0)
@@ -0,0 +1,77 @@
+<?php
+/**
+* @version		$Id: $
+* @package		Joomla
+* @subpackage	Sections
+* @copyright	Copyright (C) 2005 - 2008 Open Source Matters. All rights reserved.
+* @license		GNU/GPL, see LICENSE.php
+* Joomla! is free software. This version may have been modified pursuant
+* to the GNU General Public License, and as distributed it includes or
+* is derivative of works licensed under the GNU General Public License or
+* other free or open source software licenses.
+* See COPYRIGHT.php for copyright notices and details.
+*/
+
+// Check to ensure this file is included in Joomla!
+defined('_JEXEC') or die();
+
+jimport( 'joomla.application.component.view');
+
+/**
+ * HTML View class for the Sections component
+ *
+ * @static
+ * @package		Joomla
+ * @subpackage	Sections
+ * @since 1.0
+ */
+class SectionsViewCopySelect extends JView
+{
+	function display($tpl = null)
+	{
+		global $mainframe;
+	
+		$db =& JFactory::getDBO();
+	
+		$cid = JRequest::getVar( 'cid', array(0), '', 'array' );
+		JArrayHelper::toInteger($cid);
+	
+		if ( count( $cid ) < 1) {
+			JError::raiseError(500, JText::_( 'Select an item to move', true ) );
+		}
+	
+		## query to list selected sections
+		$cids = implode( ',', $cid );
+		$query = 'SELECT a.title, a.id'
+		. ' FROM #__sections AS a'
+		. ' WHERE a.id IN ( '.$cids.' )'
+		;
+		$db->setQuery( $query );
+		$sections = $db->loadObjectList();
+	
+		## query to list selected categories
+		$cids = implode( ',', $cid );
+		$query = 'SELECT a.title, a.id'
+		. ' FROM #__categories AS a'
+		. ' WHERE a.section IN ( '.$cids.' )'
+		;
+		$db->setQuery( $query );
+		$categories = $db->loadObjectList();
+	
+		## query to list items from categories
+		$query = 'SELECT a.title, a.id'
+		. ' FROM #__content AS a'
+		. ' WHERE a.sectionid IN ( '.$cids.' )'
+		. ' ORDER BY a.sectionid, a.catid, a.title'
+		;
+		$db->setQuery( $query );
+		$contents = $db->loadObjectList();
+	
+		$this->assignRef('sections',	$sections);
+		$this->assignRef('categories',	$categories);
+		$this->assignRef('contents',	$contents);
+		$this->assignRef('cid',			$cid);
+
+		parent::display($tpl);
+	}
+}
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/copyselect/index.html
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/copyselect/index.html	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/copyselect/index.html	(revision 0)
@@ -0,0 +1 @@
+<html><body bgcolor="#FFFFFF"></body></html>
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/copyselect/tmpl/default.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/copyselect/tmpl/default.php	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/copyselect/tmpl/default.php	(revision 0)
@@ -0,0 +1,98 @@
+<?php defined('_JEXEC') or die('Restricted access'); ?>
+
+<?php JHTML::_('behavior.tooltip'); ?>
+<?php JRequest::setVar( 'hidemainmenu', 1 ); ?>
+
+
+<?php
+	$scope 		= JRequest::getCmd( 'scope' );
+	$option		= JRequest::getCmd( 'option' );
+
+	// Set toolbar items for the page
+	JToolBarHelper::title( JText::_( 'Section' ) .': <small><small>[ '. JText::_( 'Copy' ).' ]</small></small>', 'section.png' );
+	JToolBarHelper::save( 'copysave' );
+	JToolBarHelper::cancel();
+?>
+<script language="javascript" type="text/javascript">
+function submitbutton(pressbutton) {
+	var form = document.adminForm;
+	if (pressbutton == 'cancel') {
+		submitform( pressbutton );
+		return;
+	}
+
+	submitform(pressbutton);
+}
+</script>
+<form action="index.php" method="post" name="adminForm">
+
+<table class="adminform">
+<tr>
+	<td width="3%"></td>
+	<td  valign="top" width="20%">
+	<strong><?php echo JText::_( 'Sections being copied' ); ?>:</strong>
+	<br />
+	<?php
+	echo "<ol>";
+	foreach ( $this->sections as $section ) {
+		?>
+		<li><?php echo $section->title; ?></li>
+		<input type="hidden" name="section[]" value="<?php echo $section->id; ?>" />
+		<?php
+	}
+	echo "</ol>";
+	?>
+	</td>
+	<td  valign="top" width="20%">
+	<strong><?php echo JText::_( 'Categories being copied' ); ?>:</strong>
+	<br />
+	<?php
+	echo "<ol>";
+	foreach ( $this->categories as $category ) {
+		?>
+		<li><?php echo $category->title; ?></li>
+		<input type="hidden" name="category[]" value="<?php echo $category->id; ?>" />
+		<?php
+	}
+	echo "</ol>";
+	?>
+	</td>
+	<td valign="top" width="20%">
+	<strong><?php echo JText::_( 'Articles being copied' ); ?>:</strong>
+	<br />
+	<?php
+	echo "<ol>";
+	foreach ( $this->contents as $content ) {
+		?>
+		<li><?php echo $content->title; ?></li>
+		<input type="hidden" name="content[]" value="<?php echo $content->id; ?>" />
+		<?php
+	}
+	echo "</ol>";
+	?>
+	</td>
+	<td valign="top">
+	<?php echo JText::_( 'This will copy the Categories listed' ); ?>
+	<br />
+	<?php echo JText::_( 'DESCALLITEMSWITHINCAT' ); ?>
+	<br />
+	<?php echo JText::_( 'to the new Section(s) created.' ); ?>
+	</td>.
+</tr>
+</table>
+<br /><br />
+
+<input type="hidden" name="<?php echo JUtility::getToken(); ?>" value="1" />
+<input type="hidden" name="option" value="<?php echo $option;?>" />
+<input type="hidden" name="section" value="<?php echo $section;?>" />
+<input type="hidden" name="boxchecked" value="1" />
+<input type="hidden" name="task" value="" />
+<input type="hidden" name="scope" value="content" />
+<?php
+foreach ( $this->cid as $id ) {
+	?>
+	<input type="hidden" name="cid[]" value="<?php echo $id; ?>" />
+	<?php
+}
+?>
+</form>
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/copyselect/tmpl/index.html
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/copyselect/tmpl/index.html	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/copyselect/tmpl/index.html	(revision 0)
@@ -0,0 +1 @@
+<html><body bgcolor="#FFFFFF"></body></html>
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/index.html
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/index.html	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/views/index.html	(revision 0)
@@ -0,0 +1 @@
+<html><body bgcolor="#FFFFFF"></body></html>
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/sections.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/sections.php	(revision 0)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/sections.php	(revision 0)
@@ -0,0 +1,25 @@
+<?php
+/**
+* @version		$Id: $
+* @package		Joomla
+* @subpackage	Newsfeeds
+* @copyright	Copyright (C) 2005 - 2008 Open Source Matters. All rights reserved.
+* @license		GNU/GPL, see LICENSE.php
+* Joomla! is free software. This version may have been modified pursuant
+* to the GNU General Public License, and as distributed it includes or
+* is derivative of works licensed under the GNU General Public License or
+* other free or open source software licenses.
+* See COPYRIGHT.php for copyright notices and details.
+*/
+
+// no direct access
+defined( '_JEXEC' ) or die( 'Restricted access' );
+
+// Require the base controller
+require_once (JPATH_COMPONENT.DS.'controller.php');
+
+$controller	= new SectionsController( );
+
+// Perform the Request task
+$controller->execute( JRequest::getCmd('task'));
+$controller->redirect();
\ No newline at end of file
Index: //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/toolbar.sections.php
===================================================================
--- //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/toolbar.sections.php	(revision 9787)
+++ //Rocklobster/sites/br-eng1.5/administrator/components/com_sections/toolbar.sections.php	(working copy)
@@ -1,38 +0,0 @@
-<?php
-/**
-* @version		$Id$
-* @package		Joomla
-* @subpackage	Sections
-* @copyright	Copyright (C) 2005 - 2008 Open Source Matters. All rights reserved.
-* @license		GNU/GPL, see LICENSE.php
-* Joomla! is free software. This version may have been modified pursuant
-* to the GNU General Public License, and as distributed it includes or
-* is derivative of works licensed under the GNU General Public License or
-* other free or open source software licenses.
-* See COPYRIGHT.php for copyright notices and details.
-*/
-
-// no direct access
-defined( '_JEXEC' ) or die( 'Restricted access' );
-
-require_once( JApplicationHelper::getPath( 'toolbar_html' ) );
-
-switch ( $task )
-{
-	case 'add'  :
-		TOOLBAR_sections::_EDIT(false);
-		break;
-	case 'edit' :
-	case 'editA':
-		TOOLBAR_sections::_EDIT(true);
-		break;
-
-	case 'copyselect':
-	case 'copysave':
-		TOOLBAR_sections::_COPY();
-		break;
-
-	default:
-		TOOLBAR_sections::_DEFAULT();
-		break;
-}
\ No newline at end of file
