<?php
/**
 * Test class for JRouter.
 * Generated by PHPUnit_Util_Skeleton on 2007-02-27 at 05:36:09.
 *
 * @package 	Joomla
 * @subpackage 	UnitTest
 * @version 	$Id$
 */

// Call TestOfJRouter::main() if this source file is executed directly.
if (!defined('JUNITTEST_MAIN_METHOD')) {
    define('JUNITTEST_MAIN_METHOD', 'TestOfJRouter::main');
    $JUNITTEST_ROOT = substr(__FILE__, 0, strpos(__FILE__, DIRECTORY_SEPARATOR.'unittest'));
	require_once($JUNITTEST_ROOT.'/unittest/prepend.php');
}

require_once('libraries/joomla/application/router.php');

class TestOfJRouter extends UnitTestCase {

	/**
	 * Runs the test methods of this class.
	 *
	 * @access public
	 * @static
	 */
	function main() {
		$self = new TestOfJRouter;
		$self->run( UnitTestHelper::getReporter() );
	}

	/**
	 * Sets up the fixture, for example, open a network connection.
	 * This method is called before a test is executed.
	 *
	 * @access protected
	 */
	function setUp() {
	}

	/**
	 * Tears down the fixture, for example, close a network connection.
	 * This method is called after a test is executed.
	 *
	 * @access protected
	 */
	function tearDown() {
	}

	/**
	 * Test Cases
	 */
	function test__construct()
	{
		// Remove the following line when you implement this test.
		return $this->_reporter->setMissingTestCase();

		$instance = new JRouter;
		$this->assertIsA($instance, 'JRouter');

	}


	/**
	 * @todo Implement testGetInstance()
	 *
	 * Parameters: 1
	 *   required: 0
	 * @param #1  $options optional (Array) , allows NULL
	 * @staticvar $instance
	 */
	function testGetInstance()
	{
		// Remove the following line when you implement this test.
		return $this->_reporter->setMissingTestCase();

		// replace with sth. useful :)
		$options = array();
		$compare1 =& JRouter::getInstance( $options );
	}

	/**
	 * @todo Implement testParse()
	 *
	 * Parameters: 1
	 *   required: 1
	 * @param #1  $url required , allows NULL
	 */
	function testParse()
	{
		// Remove the following line when you implement this test.
		return $this->_reporter->setMissingTestCase();

		// replace with sth. useful :)
		$url = null;
		$compare1 = JRouter::parse( $url );
	}

	/**
	 * @todo Implement testBuild()
	 *
	 * Parameters: 1
	 *   required: 1
	 * @param #1  $value required , allows NULL
	 * @staticvar $strings
	 */
	function testBuild()
	{
		// Remove the following line when you implement this test.
		return $this->_reporter->setMissingTestCase();

		// replace with sth. useful :)
		$value = null;
		$compare1 = JRouter::build( $value );
	}

	/**
	 * @todo Implement testParseComponentSegment()
	 *
	 * Parameters: 2
	 *   required: 2
	 * @param #1  $component required , allows NULL
	 * @param #2  $route required , allows NULL
	 */
	function testParseComponentSegment()
	{
		// Remove the following line when you implement this test.
		return $this->_reporter->setMissingTestCase();

		// replace with sth. useful :)
		$component = null;
		$route = null;
		$compare1 = JRouter::parseComponentSegment( $component, $route );
		$compare2 = JRouter::parseComponentSegment( $component, $route );
	}

	/**
	 * @todo Implement testBuildComponentSegment()
	 *
	 * Parameters: 2
	 *   required: 2
	 * @param #1  $component required , allows NULL
	 * @param #2  &$query required , allows NULL
	 */
	function testBuildComponentSegment()
	{
		// Remove the following line when you implement this test.
		return $this->_reporter->setMissingTestCase();

		// replace with sth. useful :)
		$component = null;
		$query = null;
		$compare1 = JRouter::buildComponentSegment( $component, $query );
		$compare2 = JRouter::buildComponentSegment( $component, $query );
	}


}

// Call TestOfJRouter::main() if this source file is executed directly.
if (JUNITTEST_MAIN_METHOD == 'TestOfJRouter::main') {
	TestOfJRouter::main();
}
