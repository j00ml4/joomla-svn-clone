<?php
/**
 * Test class for JFrameworkConfig.
 *
 * @package Joomla
 * @subpackage UnitTest
 * @version $Id$
 */

// Call JFrameworkConfigTest::main() if this source file is executed directly.
if (! defined('JUNIT_MAIN_METHOD')) {
	define('JUNIT_MAIN_METHOD', 'JLoaderTest::main');
	$JUnit_home = DIRECTORY_SEPARATOR . 'unittest' . DIRECTORY_SEPARATOR;
	if (($JUnit_posn = strpos(__FILE__, $JUnit_home)) === false) {
		die('Unable to find ' . $JUnit_home . ' in path.');
	}
	$JUnit_posn += strlen($JUnit_home) - 1;
	$JUnit_root = substr(__FILE__, 0, $JUnit_posn);
	$JUnit_start = substr(
		__FILE__,
		$JUnit_posn + 1,
		strlen(__FILE__) - strlen(basename(__FILE__)) - $JUnit_posn - 2
	);
	require_once $JUnit_root . DIRECTORY_SEPARATOR . 'setup.php';
}

/* class to test */
require_once 'libraries/joomla/config.php';

/**
 * Test class for JFrameworkConfig.
 * Generated by PHPUnit_Util_Skeleton on 2007-02-21 at 23:19:20.
 */
class JFrameworkConfigTest extends PHPUnit_Framework_TestCase {

	var $instance;
	var $proto = array(
		'dbtype'=>'mysql',
		'host'=>'localhost',
		'user'=>'',
		'password'=>'',
		'db'=>'',
		'dbprefix'=>'jos_',
		'ftp_host'=>'127.0.0.1',
		'ftp_port'=>21,
		'ftp_user'=>'',
		'ftp_pass'=>'',
		'ftp_root'=>'',
		'ftp_enable'=>0,
		'tmp_path'=>'/tmp',
		'log_path'=>'/var/logs',
		'mailer'=>'mail',
		'mailfrom'=>'admin@localhost.home',
		'fromname'=>'',
		'sendmail'=>'/usr/sbin/sendmail',
		'smtpauth'=>'0',
		'smtpuser'=>'',
		'smtppass'=>'',
		'smtphost'=>'localhost',
		'debug'=>0,
		'caching'=>0,
		'cachetime'=>900,
		'language'=>'en-GB',
		'secret'=>null,
		'editor'=>'none',
		'offset'=>0,
		'lifetime'=>15
	);

	/**
	 * Runs the test methods of this class.
	 */
	function main() {
		$suite  = new PHPUnit_Framework_TestSuite(__CLASS__);
		$result = PHPUnit_TextUI_TestRunner::run($suite);
	}

	function setUp() {
		$this->instance = new JFrameworkConfig();
	}

	function tearDown() {
		$this->instance = null;
		unset($this->instance);
	}

	function test_inheritance() {
		// it should not inherit from anything
		$parent = get_parent_class($this->instance);
		$this->assertIsA($this->instance, 'JFrameworkConfig');

		$this->assertFalse(is_subclass_of($this->instance, 'JObject'));
	}

	function test_property_names() {
		$compare = (array) $this->instance;
		foreach (array_keys($this->proto) as $expect) {
			$this->assertTrue(array_key_exists($expect, $compare), $expect . ' not found.');
		}
	}

	function test_property_defaults() {
		$compare = (array) $this->instance;
		foreach ($this->proto as $prop => $expect) {
			$this->assertEquals($expect, $compare[$prop], $prop.' %s');
		}
	}

}

// Call JFrameworkConfigTest::main() if this source file is executed directly.
if (JUNIT_MAIN_METHOD == 'JFrameworkConfigTest::main') {
	JFrameworkConfigTest::main();
}
