======How to connect to an external database======

If you need to access tables within the same database as your Joomla! installation then you can simply use the [[references:joomla.framework:jfactory-getdbo|JFactory::getDBO]] method.  This uses the already established connection that Joomla! uses to connect to the database.  For example:

<code php|Connecting to the Joomla! database>
<?php
$db = JFactory::getDBO();
?>
</code>

$db is now an object of type [[references:joomla.framework:database:jdatabase|JDatabase]] and you can perform database operations on it using the usual methods.

But what if you want to connect to a completely different database from the one used by Joomla!?.  This might be a different database on the same machine as your Joomla! site or it might be on a different host and perhaps even require a different database driver.  Well, you can do this using the [[references:joomla.framework:database:jdatabase-getinstance|JDatabase::getInstance]] method.

<code php|Connecting to an external database>
<?php
$driver = 'mysql';		// Database driver name
$host   = 'db.myhost.com';	// Database host name
$user   = 'fredbloggs';		// User for database authentication
$pass   = 's9(39sÂ£h[%dkFd';	// Password for database authentication
$dbase  = 'bigdatabase';	// Database name
$prefix = 'abc_';		// Database prefix (may be empty)

$db = & JDatabase::getInstance( $driver, $host, $user, $pass, $dbase, $prefix );
?>
</code>

$db is now an object of type [[references:joomla.framework:database:jdatabase|JDatabase]] and you can perform database operations on it using the usual methods.

Note that if the database uses a non-standard port number then this can be specified by adding it to the end of the host name.  For example, you might have your MySQL database running on port 3307 (the default is port 3306), in which case your host name might be 'db.myhost.com:3307'.

One feature of using [[references:joomla.framework:database:jdatabase-getinstance|JDatabase::getInstance]] is that if another call is made with the same parameters it will return the previously created object rather than creating a fresh one.

Note, however, that the parameters must match exactly for this to happen.  For example, if two calls were made to a MySQL database using [[references:joomla.framework:database:jdatabase-getinstance|JDatabase::getInstance]], with the first using a host name of 'db.myhost.com' and the second using 'db.myhost.com:3306', then two separate connections would be made, even though port 3306 is the default port for MySQL and so the parameters are logically the same. 
----
~~DISCUSSION~~