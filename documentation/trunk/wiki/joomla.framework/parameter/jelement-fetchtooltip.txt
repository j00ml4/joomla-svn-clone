====== fetchTooltip ======
^ API ^ Package ^ Class ^ phpDocumentor ^
| [[|{{http://api.joomla.org/media/images/package.png }}]] [[references:Joomla.Framework|Joomla.Framework]] | [[|{{http://api.joomla.org/media/images/package.png }}]] [[references:joomla.framework#Parameter|Parameter]] | [[JElement|JElement]] | [[http://api.joomla.org/Joomla-Framework/Parameter/JElement.html|JElement->fetchTooltip]] |

Renders tool tip code for the parameter.

===== Syntax =====
void fetchTooltip	( **$label**, **$description**, **&$xmlElement**, **$control_name**, **$name** )

| **$label** | string | is a string containing the label to apply to the tool tip. |
| **$description** | string | is a string containing the description to appear in the tool tip. |
| **&$xmlElement** | JSimpleXMLElement | is an XML element object that contains the information pertaining to the parameter. This element is of type [[references:joomla.framework:utilities:jsimplexmlelement|JSimpleXMLElement]]. |
| **$control_name** | string | is a string containing the control name. This value is prepended to the label of many elements and is prepended to the element name, which is in square brackets. This parameter is optional and if omitted defaults to an empty string. |
| **$name** | string | is a string containing the name of the tool tip. |

===== Examples =====
Display a tool tip for an element:
<code php|Example>
jimport( 'joomla.presentation.parameter.element' );
$element = new JElement( $this );
$element->fetchElement( 'length', '25', $element, 'myform' );

echo $element->fetchTooltip( 'Label1', 'This is a description of this parameter', $xmlParameter, 'controlname', 'tipname' );
</code>
might produce:
<code php|Result>
<label for="controlnametipname"><span onmouseover="return overlib('This is a description of this parameter', CAPTION, 'Label1', BELOW, RIGHT);" onmouseout="return nd();" >Label1</span></label>
</code>