====== fetchElement ======
^ API ^ Package ^ Class ^ phpDocumentor ^ Last reviewed ^ Doc status ^
| {{http://api.joomla.org/media/images/package.png?nolink}} [[references:joomla.framework|Joomla.Framework]] | {{http://api.joomla.org/media/images/package.png?nolink}} [[references:joomla.framework/#Parameter|Parameter]] | {{http://api.joomla.org/media/images/Class.png?nolink}}[[JElementSpacer|JElementSpacer]] | [[http://api.joomla.org/Joomla-Framework/Parameter/JElementSpacer.html|JElementSpacer->fetchElement]] | never | Work in progress |

Renders the HTML code for a spacer. If the **$value** parameter evaluates to a true value, this method will return **$value**. Otherwise, the method will return '<hr />'.

This element does not use the &$node variable. The XML code for a spacer element looks like:
<code><param name="@spacer" type="spacer" default="" label="" description="" /></code>

While the XML node is not used by this method, this XML element is required if the [[JParameter|JParameter]] class is to be used to process the elements.

===== Syntax =====
void fetchElement	( **$name**, **$value**, **&$node**, **$control_name** )

| **$name** | string | is a string containing the value for the name attribute of the form element. |
| **$value** | string | is a string specifying the output of the method. |
| **&$node** | JSimpleXMLElement | is a JSimpleXMLElement node object containing the settings for the element. This parameter is not used by this class. |
| **$control_name** | string | is a string containing the name of the control for the element. |

===== Examples =====
<code php|Example>
$xml = & JFactory::getXMLParser('Simple');
    
$file 	= JPATH_ADMINISTRATOR .'/components/com_document/document_items.xml';
 
$xml->loadFile( $file );
$parameters =& $xml->document->params[0];
$nodes =& $parameters->children();
$parameter = new JParameter( '' );
$element = $parameter->loadElement( 'spacer' );

echo $element->fetchElement( 'spacer', '<br />', $nodes[0], 'params' );
</code>
might produce:
<code php|Result>
<br />
</code>
The contents of the document_items.xml file for this example are:
<code php|document_items.xml>
<?xml version="1.0" encoding="iso-8859-1"?>
<install type="component" version="1.0.0">
	<name>Document Items</name>
	<version>1.0.0</version>
	<description>Example Parameters</description>
    <params>
        <param name="@spacer" type="spacer" default="" label="" description="" />
	</params>
</install>
</code>

----

~~DISCUSSION~~
