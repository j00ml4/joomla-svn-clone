====== fetchElement ======
^ API ^ Package ^ Class ^ phpDocumentor ^ Last reviewed ^ Doc status ^
| [[references:Joomla.Framework|{{http://api.joomla.org/media/images/package.png }}]] [[references:Joomla.Framework|Joomla.Framework]] | [[|{{http://api.joomla.org/media/images/package.png }}]] [[references:joomla.framework#Parameter|Parameter]] | [[JElement_Section|{{http://api.joomla.org/media/images/Class.png }}]][[JElement_Section|JElement_Section]] | [[http://api.joomla.org/Joomla-Framework/Parameter/JElement_Section.html|JElement_Section->fetchElement]] | never | Work in progress |

Renders the HTML code for a selection list containing the available content sections. The resulting selection list will have the name $control_name[$name] and will have $value selected (this groups elements into an array with the specified control name).

This element does not use the &$node variable. The XML code for a section element looks like:
<code><param name="sectionid" type="section" label="Content Section" description="Section to view articles" /></code>

While the XML node is not used by this method, this XML element is required if the [[JParameter|JParameter]] class is to be used to process the elements.

===== Syntax =====
void fetchElement ( **$name**, **$value**, **&$node**, **$control_name** )

| **$name** | string | is a string containing the value for the name attribute of the form element. |
| **$value** | string | is a string specifying the original value of the parameter. |
| **&$node** | JSimpleXMLElement | is a JSimpleXMLElement node object containing the settings for the element. This parameter is not used by this class. |
| **$control_name** | string | is a string containing the name of the control for the element. |

===== Examples =====
<code php|Example>
$xml = & JFactory::getXMLParser('Simple');
    
$file 	= JPATH_ADMINISTRATOR .'/components/com_document/document_items.xml';
 
$xml->loadFile( $file );
$parameters =& $xml->document->params[0];
$nodes =& $parameters->children();
$parameter = new JParameter( '' );
$element = $parameter->loadElement( 'section' );

echo $element->fetchElement( 'sectionid', '0', $nodes[0], 'params' );
</code>
might produce:
<code php|Result>
<select name="params[sectionid]" id="paramssectionid" class="inputbox">
    <option value="0"  selected="selected">- Select Section -</option>
    <option value="3" >FAQs</option><option value="1" >News</option>
    <option value="2" >Newsflashes</option>
</select>
</code>
The contents of the document_items.xml file for this example are:
<code php|document_items.xml>
<?xml version="1.0" encoding="iso-8859-1"?>
<install type="component" version="1.0.0">
	<name>Document Items</name>
	<version>1.0.0</version>
	<description>Example Parameters</description>
    <params>
        <param name="sectionid" type="section" default="0" label="Edit posts" description="Set the section to retrieve posts from" />
    </params>
</install>
</code>

----

~~DISCUSSION~~