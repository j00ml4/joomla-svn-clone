====== fetchElement ======
^ API ^ Package ^ Class ^ phpDocumentor ^ Last reviewed ^ Doc status ^
| {{http://api.joomla.org/media/images/package.png?nolink}} [[references:joomla.framework|Joomla.Framework]] | {{http://api.joomla.org/media/images/package.png?nolink}} [[references:joomla.framework/#Parameter|Parameter]] | {{http://api.joomla.org/media/images/Class.png?nolink}}[[JElementList|JElementList]] | [[http://api.joomla.org/Joomla-Framework/Parameter/JElementList.html|JElementList->fetchElement]] | never | Work in progress |

Renders the HTML code for a selection list containing the entries specified in the XML file. The resulting selection list will have the name $control_name[$name] and will have $value selected (this groups elements into an array with the specified control name).

The XML code for a list element might look like:
<code php|XML for list element>
<param name="link_titles" type="list" default="" label="Linked Titles" description="Make the Item titles linkable">
	<option value="">Use Global</option>
	<option value="0">No</option>
	<option value="1">Yes</option>
</param>
</code>
The **class** attribute of the XML element is used to define the class of the select list. If this is not set, the value 'inputbox' will be assigned to the class attribute. The child parameters (options) are defined in the same format as standard HTML select options.


===== Syntax =====
void fetchElement ( **$name**, **$value**, **&$node**, **$control_name** )

| **$name** | string | is a string containing the value for the name attribute of the form element. |
| **$value** | string | is a string specifying the original value of the parameter. |
| **&$node** | JSimpleXMLElement | is a JSimpleXMLElement node object containing the settings for the element. |
| **$control_name** | string | is a string containing the name of the control for the element. |

===== Examples =====
<code php|Example>
$xml = & JFactory::getXMLParser('Simple');
    
$file = JPATH_ADMINISTRATOR.DS.'components'.DS.'com_document'.DS.'document_items.xml';
 
$xml->loadFile( $file );
$parameters =& $xml->document->params[0];
$nodes =& $parameters->children();
$parameter = new JParameter( '' );
$element = $parameter->loadElement( 'list' );

echo $element->fetchElement( 'link_titles', '1', $nodes[0], 'params' );
</code>
might produce:
<code php|Result>
<select name="params[link_titles]" id="paramslink_titles" class="inputbox">
    <option value="" >Use Global</option>
    <option value="0" >No</option>
    <option value="1"  selected="selected">Yes</option>
</select>
</code>
The contents of document_items.xml for this example are:
<code php|document_items.xml>
<?xml version="1.0" encoding="iso-8859-1"?>
<install type="component" version="1.0.0">
	<name>Document Items</name>
	<version>1.0.0</version>
	<description>Example Parameters</description>
    <params>
        <param name="link_titles" type="list" default="" label="Linked Titles" description="Make the Item titles linkable">
        	<option value="">Use Global</option>
        	<option value="0">No</option>
        	<option value="1">Yes</option>
        </param>
	</params>
</install>
</code>

----

~~DISCUSSION~~