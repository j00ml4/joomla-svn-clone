====== folders ======
^ API ^ Package ^ Class ^ phpDocumentor ^ Last reviewed ^ Doc status ^
| [[references:Joomla.Framework|{{http://api.joomla.org/media/images/package.png }}]] [[references:Joomla.Framework|Joomla.Framework]] | [[|{{http://api.joomla.org/media/images/package.png }}]] [[references:joomla.framework#FileSystem|FileSystem]] | [[JFolder|{{http://api.joomla.org/media/images/Class.png }}]][[JFolder|JFolder]] | [[http://api.joomla.org/Joomla-Framework/FileSystem/JFolder.html#folders|JFolder->folders]] | 26 Apr 2006 | Published |

Utility function to read the folders in a folder. This function uses FTP if enabled, otherwise, it will use the built in PHP functions. An array containing the folders in the folder is returned.

===== Syntax =====
array folders	( **$path**, **$filter**, **$recurse**, **$fullpath** )
| **$path** | string | is a string containing the path of the folder to read. |
| **$filter** | string | is a string containing a filter for folder names. The filter is applied as a [[http://en.wikipedia.org/wiki/Regular_expression|regular expression]], so this syntax should be followed. This parameter is optional and if omitted defaults to an empty string. |
| **$recurse** | boolean | is a flag which specifies whether or not sub-folders should be recursively searched. This parameter is optional and if omitted defaults to false. |
| **$fullpath** | boolean | is a flag which specifies whether or not the full path to the folder should be returned. This parameter is optional and if omitted defaults to false. |

===== Examples =====
<code php|Example>
jimport( 'joomla.filesystem.folder' );
$folders = JFolder::folders( 'plugins/', '.*', false, true );
print_r( $folders );
</code>
might produce:
<code php|Result>
Array
(
    [0] => plugins\authentication
    [1] => plugins\content
    [2] => plugins\editors
    [3] => plugins\editors-xtd
    [4] => plugins\search
    [5] => plugins\syndicate
    [6] => plugins\system
    [7] => plugins\user
    [8] => plugins\xmlrpc
)
</code>

----

~~DISCUSSION~~