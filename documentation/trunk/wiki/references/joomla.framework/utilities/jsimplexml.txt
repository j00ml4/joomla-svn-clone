====== JSimpleXML ======
{#JAPI Joomla.Framework Utilities JSimpleXML #}

SimpleXML implementation.

The XML Parser extension (expat) is required to use JSimpleXML. The class provides a pure PHP4 implementation of the PHP5 interface SimpleXML. As with PHP5's SimpleXML it is what it says: **simple**.\\
Nevertheless, it is an easy way to deal with XML data, especially for read only access.

Because it's not possible to use the PHP5 ArrayIterator interface  with PHP4 there are some differences between this implementation  and that of PHP5:

  * The access to the root node has to be explicit in JSimpleXML, not implicit as with PHP5.\\ Write %%$xml->document->node%% instead of %%$xml->node%%
  * You cannot acces CDATA using array syntax. Use the method data() instead
  * You cannot access attributes directly with array syntax. use attributes() to read them.
  * Comments are ignored.
  * Last and least, this is not as fast as PHP5 SimpleXML -- it is pure PHP4.

Note: JSimpleXML cannot be used to access sophisticated XML doctypes using datatype ANY (e.g. XHTML). With a DOM implementation you can handle this.

===== Methods =====
^ Method ^ Description ^
| {{references:Constructor.png?nolink}} [[JSimpleXML-__construct|__construct]] | Constructor. |
| {{references:Method.png?nolink}} [[JSimpleXML-getParser|getParser]] | Get the parser |
| {{references:Method.png?nolink}} [[JSimpleXML-importDom|importDom]] | Get a [[JSimpleXMLElement]] object from a DOM node.|
| {{references:Method.png?nolink}} [[JSimpleXML-loadFile|loadFile]] | Interprets an XML file into an object |
| {{references:Method.png?nolink}} [[JSimpleXML-loadString|loadString]] | Interprets a string of XML into an object |
| {{references:Method.png?nolink}} [[JSimpleXML-setParser|setParser]] | Set the parser |
| {{references:Method.png?nolink}} [[JSimpleXML-_characterData|_characterData]] | Handler function for the character data within a tag |
| {{references:Method.png?nolink}} [[JSimpleXML-_endElement|_endElement]] | Handler function for the end of a tag |
| {{references:Method.png?nolink}} [[JSimpleXML-_getStackLocation|_getStackLocation]] | Gets the reference to the current direct parent |
| {{references:Method.png?nolink}} [[JSimpleXML-_handleError|_handleError]] | Handles an XML parsing error |
| {{references:Method.png?nolink}} [[JSimpleXML-_parse|_parse]] | Start parsing an XML document |
| {{references:Method.png?nolink}} [[JSimpleXML-_startElement|_startElement]] | Handler function for the start of a tag |

===== Related Classes =====
  * [[JSimpleXMLElement]]

===== Examples =====

<code xml|XML source document (simple.xml)>
<?xml version=""1.0" encoding="utf-8" standalone="yes"?>
<document>
  <node>
    <child gender="m">Tom Foo</child>
    <child gender="f">Tamara Bar</child>
  <node>
</document>
</code>

<code php|Example 1: return XML source>
// read and write a document
$xml = new JSimpleXML;
$xml->loadFile('simple.xml');
echo $xml->toString();
</code>
Will return the XML source of 'simple.xml' as depicted above.

<code php|Example 2:accessing node data>
// access a given node's CDATA
echo 'Name:', $xml->root->node->child[0]->data();

// access attributes
$attr = $xml->root->node->child[1]->attributes();
echo 'Gender: ', ($attr['gender'] == 'f') ? 'female' : 'male';
</code>
Will output:
  Name: Tom Foo
  Gender: male

<code php|Example 3:Loop through child nodes>
// access children
foreach( $xml->root->node->children() as $child ) {
    echo $child->data();
}
</code>
Will output:
  Tom Foo
  Tamara Bar

~~DISCUSSION~~
