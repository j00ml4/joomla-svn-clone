====== getCryptedPassword ======
^ API ^ Package ^ Class ^ phpDocumentor ^ Last reviewed ^ Doc status ^
| {{references:package.png?nolink}} [[references:joomla.framework|Joomla.Framework]] | {{references:package.png?nolink}} [[references:joomla.framework/#User|User]] | {{references:Class.png?nolink}}[[JAuthenticateHelper|JAuthenticateHelper]] | [[http://api.joomla.org/Joomla.Framework/Application/JAuthenticateHelper.html|JAuthenticateHelper->getCryptedPassword]] | 19 September 2006 | Published |

Formats a password using the current encryption.

===== Syntax =====
string getCryptedPassword ( **$plaintext**, **$salt**, **$encryption**, **$show_encrypt** )
| **$plaintext** | string | is a string containing the plaintext password to encrypt. |
| **$salt** | string | is a string containing the salt to use to encrypt the password. This parameter is optional and of omitted, a new salt will be generated. |
| **$encryption** | string | is a string containing the kind of password encryption to use. See the page on [[EncryptionTypes|Password Encryption Types]] for more information. This parameter is optional and if omitted defaults to md5-hex. |
| **$show_encrypt** | boolean | is flag which specifies whether the encryption type should be prepended to the crypted password ({SHA}, etc.). This parameter is optional and if omitted defaults to false. |

===== Examples =====
The JUser::bind method calls this method to encrypt the password that is submitted. The bind method uses the following code:
<code php|Example 1>
jimport( 'joomla.application.user.authenticate' );

$array['password'] = JAuthenticateHelper::getCryptedPassword( $array['password'] );
</code>

Generate a random password and encrypt it. In this example, 'crypt' encryption is used and the salt is specified as 'ab'.
<code php|Example 2>
jimport( 'joomla.application.user.authenticate' );

echo "Generated Password: " . ($password = JAuthenticateHelper::genRandomPassword( 10 ) );
echo "Crypted Password with type prepended: " . JAuthenticateHelper::getCryptedPassword( $password, 'ab', 'crypt', true );
echo "Crypted Password: " . JAuthenticateHelper::getCryptedPassword( $password, 'ab', 'crypt', false );
</code>
might produce:
<code php|Result>
Generated Password: b84g3CRitN
Crypted Password with type prepended: {crypt}ab0CRxpIoE5tg
Crypted Password: ab0CRxpIoE5tg
</code>

----

~~DISCUSSION~~

