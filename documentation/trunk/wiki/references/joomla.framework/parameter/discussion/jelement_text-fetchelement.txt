====== fetchElement ======
^ API ^ Package ^ Class ^ phpDocumentor ^ Last reviewed ^ Doc status ^
| [[references:Joomla.Framework|{{http://api.joomla.org/media/images/package.png }}]] [[references:Joomla.Framework|Joomla.Framework]] | [[|{{http://api.joomla.org/media/images/package.png }}]] [[references:joomla.framework#Parameter|Parameter]] | [[JElement_Text|{{http://api.joomla.org/media/images/Class.png }}]][[JElement_Text|JElement_Text]] | [[http://api.joomla.org/Joomla-Framework/Parameter/JElement_Text.html|JElement_Text->fetchElement]] | never | Work in progress |

Renders the HTML code for a text field. The resulting form element will have the name $control_name[$name] and will have $value selected (this groups elements into an array with the specified control name).

This element uses two node attributes:
  * class - value to assign to the class attribute of the form element (if none is specified, the value 'text_area' is used).
  * size - the size of the text field.

The XML code for a menuitem element looks like:
<code><param name="client_name" size="25" type="text" label="Client" description="The name of the client" /></code>

===== Syntax =====
void fetchElement ( **$name**, **$value**, **&$node**, **$control_name** )

| **$name** | string | is a string containing the value for the name attribute of the form element. |
| **$value** | string | is a string specifying the original value of the parameter. |
| **&$node** | JSimpleXMLElement | is a JSimpleXMLElement node object containing the settings for the element. |
| **$control_name** | string | is a string containing the name of the control for the element. |

===== Examples =====
<code php|Example>
$xml = & JFactory::getXMLParser('Simple');
    
$file 	= JPATH_ADMINISTRATOR .'/components/com_document/document_items.xml';
 
$xml->loadFile( $file );
$parameters =& $xml->document->params[0];
$nodes =& $parameters->children();
$parameter = new JParameter( '' );
$element = $parameter->loadElement( 'text' );

echo $element->fetchElement( 'client', 'Best Customer', $nodes[0], 'params' );
</code>
might produce:
<code php|Result>
<input type="text" name="params[client]" id="paramsclient" value="Best Customer" class="text_area" size="25" />
</code>
The contents of document_items.xml for this example are:
<code php|document_items.xml>
<?xml version="1.0" encoding="iso-8859-1"?>
<install type="component" version="1.0.0">
    <name>Document Items</name>
    <version>1.0.0</version>
    <description>Example Parameters</description>
    <params>
        <param name="client_name" size="25" type="text" label="Client" description="The name of the client" />
    </params>
</install>
</code>

----

~~DISCUSSION~~