====== fetchElement ======
^ API ^ Package ^ Class ^ phpDocumentor ^ Last reviewed ^ Doc status ^
| {{http://api.joomla.org/media/images/package.png?nolink}} [[references:joomla.framework|Joomla.Framework]] | {{http://api.joomla.org/media/images/package.png?nolink}} [[references:joomla.framework/#Parameter|Parameter]] | {{http://api.joomla.org/media/images/Class.png?nolink}}[[JElementMenu|JElementMenu]] | [[http://api.joomla.org/Joomla-Framework/Parameter/JElementMenu.html|JElementMenu->fetchElement]] | never | Work in progress |

Renders the HTML code for a selection list containing a list of the menus. The resulting selection list will have the name $control_name[$name] and will have $value selected (this groups elements into an array with the specified control name).

This element does not use the &$node variable. The XML code for a menu element looks like:
<code><param name="menu" type="menu" label="Menu" description="Default menu" /></code>

While the XML node is not used by this method, this XML element is required if the [[JParameter|JParameter]] class is to be used to process the elements.

===== Syntax =====
void fetchElement	( **$name**, **$value**, **&$node**, **$control_name** )

| **$name** | string | is a string containing the value for the name attribute of the form element. |
| **$value** | string | is a string specifying the original value of the parameter. |
| **&$node** | JSimpleXMLElement | is a JSimpleXMLElement node object containing the settings for the element. This parameter is not used by this class. |
| **$control_name** | string | is a string containing the name of the control for the element. |

===== Examples =====
<code php|Example>
$xml = & JFactory::getXMLParser('Simple');
    
$file = JPATH_ADMINISTRATOR.DS.'components'.DS.'com_document'.DS.'document_items.xml';
 
$xml->loadFile( $file );
$parameters =& $xml->document->params[0];
$nodes =& $parameters->children();
$parameter = new JParameter( '' );
$element = $parameter->loadElement( 'menu' );

echo $element->fetchElement( 'menutype', '1', $nodes[0], 'params' );
</code>
might produce:
<code php|Result>
<select name="params[menutype]" id="paramsmenutype" class="inputbox">
    <option value="" >- Select Menu -</option>
    <option value="mainmenu" >mainmenu</option>
    <option value="othermenu" >othermenu</option>
    <option value="topmenu" >topmenu</option>
    <option value="usermenu" >usermenu</option>
</select>
</code>
The contents of document_items.xml for this example are:
<code php|document_items.xml>
<?xml version="1.0" encoding="iso-8859-1"?>
<install type="component" version="1.0.0">
	<name>Document Items</name>
	<version>1.0.0</version>
	<description>Example Parameters</description>
    <params>
        <param name="menutype" type="menu" label="Menu Type" description="Default type" />
	</params>
</install>
</code>

----

~~DISCUSSION~~